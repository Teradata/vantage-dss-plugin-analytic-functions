{
  "json_schema_major_version": "1",
  "json_schema_minor_version": "2",
  "json_content_version": "1",
  "function_name": "CrossValidation",
  "function_version": "1.11",
  "function_type": "driver",
  "function_alias_name": "CrossValidation",
  "function_r_name": "aa.crossvalidation",
  "short_description": "This function runs cross validation for analytics functions.",
  "long_description": "Cross-validation (or rotation estimation) is a model-validation technique for assessing how the results of a statistical analysis generalize to an independent data set. Use this technique when your goal is prediction, to estimate how accurately a predictive model performs in practice. Typically, you train a model on a training set (a data set for which you know the response variable) and validate the model on a test set or validation set (a different data set for which you know the response variable). The CrossValidation function lets you have multiple test sets by partitioning the training set. The function can thus provide insight into how a model might generalize to an independent data set. The CrossValidation function works as follows:",
  "input_tables": [
    {
      "requiredInputKind": [],
      "isOrdered": false,
      "partitionByOne": false,
      "name": "InputTable",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the table containing the input data.",
      "description": "Specifies the table containing the input data.",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "data",
      "useInR": true,
      "rOrderNum": 1
    }
  ],
  "output_tables": [
    {
      "isOutputTable": true,
      "defaultValue": "cvtable",
      "name": "CrossValidationErrorTable",
      "alternateNames": [
        "CVTable"
      ],
      "isRequired": false,
      "rDescription": "The name of the output table that contains the cross-validation errors for all models. Default is \u2018cvtable\u2019.",
      "description": "The name of the output table that contains the cross-validation errors for all models. Default is \u2018cvtable\u2019.",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "cv.table",
      "useInR": true,
      "rOrderNum": 100
    }
  ],
  "argument_clauses": [
    {
      "permittedValues": [
        "GLM"
      ],
      "isOutputColumn": false,
      "name": "FunctionName",
      "alternateNames": [
        "Function"
      ],
      "isRequired": true,
      "rDescription": "The name of the function to be cross-validated. Only ta.glm (\u2018glm\u2019) is supported.",
      "description": "Specify the name of the function to be cross-validated. The function must be GLM (not case-sensitive).",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "function.name",
      "useInR": true,
      "rOrderNum": 2
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "CVParams",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "The list of the arguments that will be used in cross validation",
      "description": "Specify the arguments to use in cross-validation.",
      "datatype": "STRING",
      "allowsLists": true,
      "rName": "cv.params ",
      "useInR": true,
      "rOrderNum": 3
    },
    {
      "defaultValue": 10,
      "lowerBound": 0,
      "upperBound": 2147483647,
      "lowerBoundType": "EXCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "FoldNum",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "The value of k in k-fold cross validation. Default is 10.",
      "description": " Specify the value of k in k -fold cross-validation. Default: 10",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "K",
      "useInR": true,
      "rOrderNum": 4
    },
    {
      "permittedValues": [
        "AUROC",
        "MSE"
      ],
      "defaultValue": "AUROC",
      "isOutputColumn": false,
      "name": "Metric",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Error function used to calculate the cross-validation error. Possible values are \u2018AUROC\u2019 (area under the ROC curve) and \u2018MSE\u2019 (mean squared error). Default is 'AUROC'.",
      "description": " Specify the error function to use to calculate the cross-validation error: Option Description 'AUROC' (Default) Area under ROC curve. 'MSE' Mean squared error.",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "metric",
      "useInR": true,
      "rOrderNum": 5
    },
    {
      "targetTable": [
        "InputTable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "InputColumns",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the names of the columns of the input table that contain the response and predictors like Y,X1,X2,...,Xp.",
      "description": "Specifies the names of the columns of the input table that contain the response and predictors like Y,X1,X2,...,Xp.",
      "datatype": "COLUMN_NAMES",
      "allowsLists": true,
      "rName": "input.columns",
      "useInR": true,
      "rOrderNum": 6
    },
    {
      "targetTable": [
        "InputTable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "CategoricalColumns",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies columnname-value pairs, 'columnname:max_cardinality' or 'columnname:(category [, ...])' or 'columnname'",
      "description": "Specifies columnname-value pairs, 'columnname:max_cardinality' or 'columnname:(category [, ...])' or 'columnname'",
      "datatype": "COLUMN_NAMES",
      "allowsLists": true,
      "rName": "categorical.columns",
      "useInR": true,
      "rOrderNum": 7
    },
    {
      "defaultValue": false,
      "name": "Step",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies whether the function runs stepwise glm.",
      "description": "Specifies whether the function runs stepwise glm.",
      "datatype": "BOOLEAN",
      "allowsLists": false,
      "rName": "step",
      "useInR": true,
      "rOrderNum": 8
    },
    {
      "permittedValues": [
        "LOGISTIC",
        "BINOMIAL",
        "POISSON",
        "GAUSSIAN",
        "GAMMA",
        "INVERSE_GAUSSIAN",
        "NEGATIVE_BINOMIAL"
      ],
      "defaultValue": [
        "BINOMIAL"
      ],
      "isOutputColumn": false,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "Family",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the distribution exponential family.",
      "description": "Specifies the distribution exponential family.",
      "datatype": "STRING",
      "allowsLists": true,
      "rName": "family",
      "useInR": true,
      "rOrderNum": 10
    },
    {
      "permittedValues": [
        "CANONICAL",
        "IDENTITY",
        "INVERSE",
        "LOG",
        "COMPLEMENTARY_LOG_LOG",
        "SQUARE_ROOT",
        "INVERSE_MU_SQUARED",
        "LOGIT",
        "PROBIT",
        "CAUCHIT"
      ],
      "defaultValue": [
        "CANONICAL"
      ],
      "isOutputColumn": false,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "LinkFunction",
      "alternateNames": [
        "Link"
      ],
      "isRequired": false,
      "rDescription": "Specifies the canonical link functions.",
      "description": "Specifies the canonical link functions.",
      "datatype": "STRING",
      "allowsLists": true,
      "rName": "link.function",
      "useInR": true,
      "rOrderNum": 11
    },
    {
      "permittedValues": [],
      "defaultValue": [
        "1.0"
      ],
      "isOutputColumn": false,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "WeightColumn",
      "alternateNames": [
        "Weight"
      ],
      "isRequired": false,
      "rDescription": "Specifies the name of an input table column that contains the weights to assign to responses.",
      "description": "Specifies the name of an input table column that contains the weights to assign to responses.",
      "datatype": "STRING",
      "allowsLists": true,
      "rName": "weight",
      "useInR": true,
      "rOrderNum": 12
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "StopThreshold",
      "alternateNames": [
        "Threshold"
      ],
      "isRequired": false,
      "rDescription": "Specify the convergence threshold.",
      "description": "Specify the convergence threshold.",
      "datatype": "STRING",
      "allowsLists": true,
      "rName": "threshold",
      "useInR": true,
      "rOrderNum": 13
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "MaxIterNum",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the maximum number of steps the function executes before quitting if the convergence threshold has not been met.",
      "description": "Specifies the maximum number of steps the function executes before quitting if the convergence threshold has not been met.",
      "datatype": "STRING",
      "allowsLists": true,
      "rName": "max.iter.num",
      "useInR": true,
      "rOrderNum": 14
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "Intercept",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies whether an intercept is included in the model.",
      "description": "Specifies whether an intercept is included in the model.",
      "datatype": "STRING",
      "allowsLists": true,
      "rName": "intercept",
      "useInR": true,
      "rOrderNum": 15
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "UniqueId",
      "alternateNames": [
        "SequenceInputBy"
      ],
      "isRequired": false,
      "rDescription": "Specifies the LIST_VECTOR of column(s) that uniquely identifies each row of the input argument INPUT_ARG_NAME. The argument is used to ensure deterministic results for functions which produce results that vary from run to run.",
      "description": "Specifies the input column(s) that uniquely identify each row of input table. The format is 'input1:c1' where input1 refers to the alias used by the input table that contains such column named c1.",
      "datatype": "STRING",
      "allowsLists": true,
      "rName": "sequence.column",
      "useInR": true,
      "rOrderNum": 50
    }
  ]
}