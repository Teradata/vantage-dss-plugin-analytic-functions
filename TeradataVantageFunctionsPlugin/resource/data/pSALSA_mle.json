{
  "json_schema_major_version": "1",
  "json_schema_minor_version": "2",
  "json_content_version": "1",
  "function_name": "pSALSA",
  "function_version": "1.2",
  "function_type": "graph",
  "function_alias_name": "PSALSA",
  "function_r_name": "aa.psalsa",
  "short_description": "Computes the psalsa score for all nodes in a bipartite graph",
  "long_description": "The PSALSA (Personalized SALSA) function is a SQL-GR function that evaluates the similarity of nodes in a bipartite graph according to their proximity. The typical application of PSALSA is for recommendation. The PSALSA function assigns numerical scores (between 0 and 1) to the vertices on both sides of the bipartite graph for each seed (hub) vertex. Also, for each seed vertex, the function outputs The score assigned by PSALSA to a node defines the probability of visiting the node by a random walk with a restart from a seed node.",
  "input_tables": [
    {
      "requiredInputKind": [
        "PartitionByKey"
      ],
      "isOrdered": false,
      "partitionByOne": false,
      "name": "vertices",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the vertices, including all the vertices (both hub and authorities), in the bipartite graph",
      "description": "Specifies the vertices, including all the vertices (both hub and authorities), in the bipartite graph",
      "datatype": "TABLE_ALIAS",
      "allowsLists": false,
      "rName": "vertices.data",
      "useInR": true,
      "rOrderNum": 1
    },
    {
      "requiredInputKind": [
        "PartitionByKey"
      ],
      "isOrdered": false,
      "partitionByOne": false,
      "name": "edges",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the edges of the bipartite graph",
      "description": "Specifies the edges of the bipartite graph",
      "datatype": "TABLE_ALIAS",
      "allowsLists": false,
      "rName": "edges.data",
      "useInR": true,
      "rOrderNum": 2
    },
    {
      "requiredInputKind": [
        "PartitionByKey"
      ],
      "isOrdered": false,
      "partitionByOne": false,
      "name": "sources",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the \u201csource\u201d vertices in the graph.",
      "description": "Specifies the \u201csource\u201d vertices in the graph.",
      "datatype": "TABLE_ALIAS",
      "allowsLists": false,
      "rName": "sources.data",
      "useInR": true,
      "rOrderNum": 3
    },
    {
      "requiredInputKind": [
        "PartitionByKey"
      ],
      "isOrdered": false,
      "partitionByOne": false,
      "name": "targets",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the \u201ctarget\u201d vertices in the graph",
      "description": "Specifies the \u201ctarget\u201d vertices in the graph",
      "datatype": "TABLE_ALIAS",
      "allowsLists": false,
      "rName": "targets.data",
      "useInR": true,
      "rOrderNum": 4
    }
  ],
  "argument_clauses": [
    {
      "targetTable": [
        "edges"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "TargetKey",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the target key (the names of the edges table columns that identify the target vertex). If you specify targets_table, then the function uses only the vertices in targets_table as targets (which must be a subset of those that this argument specifies).",
      "description": "Specify the target key (the names of the edges table columns that identify the target vertex). If you specify targets_table , the function uses only the vertices in targets_table as targets (which must be a subset of those that this argument specifies).",
      "datatype": "COLUMNS",
      "allowsLists": true,
      "rName": "target.key",
      "useInR": true,
      "rOrderNum": 5
    },
    {
      "targetTable": [
        "edges"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "SourceKey",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the source key (the names of the edges table columns that identify the target vertex). If you specify sources_table, then the function uses only the vertices in sources_table as sources (which must be a subset of those that this argument specifies). The function uses these names to construct the column names for recommended hub nodes in the output table.",
      "description": "Specify the source key (the names of the edges table columns that identify the target vertex). If you specify sources_table , the function uses only the vertices in sources_table as sources (which must be a subset of those that this argument specifies). The function uses these names to construct the column names for recommended hub nodes in the output table.",
      "datatype": "COLUMNS",
      "allowsLists": true,
      "rName": "source.key",
      "useInR": true,
      "rOrderNum": 6
    },
    {
      "targetTable": [
        "edges"
      ],
      "checkDuplicate": false,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "NUMERIC"
      ],
      "defaultValues": [
        "1"
      ],
      "requiredLength": 1,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "EdgeWeight",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the name of the edges table column that contains edge weights. Each edge_weight is a positive value. By default, each edge_weight is 1; that is, the graph is unweighted.",
      "description": " Specify the name of the edges table column that contains edge weights. Each edge_weight is a positive value. Default behavior: Each edge_weight is 1; that is, the graph is unweighted.",
      "datatype": "COLUMNS",
      "allowsLists": false,
      "rName": "edge.weight",
      "useInR": true,
      "rOrderNum": 7
    },
    {
      "targetTable": [
        "vertices"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "Accumulate",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the name of the vertices table columns to copy to the output table.",
      "description": " Specify the name of the vertices table columns to copy to the output table.",
      "datatype": "COLUMNS",
      "allowsLists": true,
      "rName": "accumulate",
      "useInR": true,
      "rOrderNum": 12
    },
    {
      "lowerBound": 0,
      "upperBound": 2147483647,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "MaxHubNum",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the maximum number of hub vertices with the highest score output for each hub vertex. The max_hubs must be an INTEGER.",
      "description": "Specify the maximum number of hub vertices with the highest score output for each hub vertex. The max_hubs must be an INTEGER.",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "max.hub.num",
      "useInR": true,
      "rOrderNum": 8
    },
    {
      "lowerBound": 0,
      "upperBound": 2147483647,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "MaxAuthorityNum",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the maximum number of authority vertices with the highest score output for each hub vertex. The max_authority must be an INTEGER.",
      "description": "Specify the maximum number of authority vertices with the highest score output for each hub vertex. The max_authority must be an INTEGER.",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "max.authority.num",
      "useInR": true,
      "rOrderNum": 9
    },
    {
      "defaultValue": 0.15,
      "lowerBound": 0,
      "upperBound": 1,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "TeleportProb",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the possibility \u03b5, a DOUBLE PRECISION value between 0 and 1 that represents the jump to the seed vertex during random walk. The default value is 0.15.",
      "description": " Specify the probability \u03b5, a DOUBLE PRECISION value between 0 and 1 that represents the jump to the seed vertex during random walk. Default: 0.15",
      "datatype": "DOUBLE",
      "allowsLists": false,
      "rName": "teleport.prob",
      "useInR": true,
      "rOrderNum": 10
    },
    {
      "defaultValue": 5000,
      "lowerBound": 1,
      "upperBound": 2147483647,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "RandomWalkLength",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the random walk length L for each hub vertex. L must be an INTEGER. The final hub/authority score is computed as \u03b5*Kv/L, where Kv is the number of times that the random walk visits vertex v. The default value is 5000.",
      "description": " Specify the random walk length L for each hub vertex. L must be an INTEGER. The final hub/authority score is computed as \u03b5* K v / L , where K v is the number of times that the random walk visits vertex v . Default: 5000",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "random.walk.length",
      "useInR": true,
      "rOrderNum": 11
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "UniqueId",
      "alternateNames": [
        "SequenceInputBy"
      ],
      "isRequired": false,
      "rDescription": "Specifies the LIST_VECTOR of column(s) that uniquely identifies each row of the input argument INPUT_ARG_NAME. The argument is used to ensure deterministic results for functions which produce results that vary from run to run.",
      "description": "Specifies the input column(s) that uniquely identify each row of input table. The format is 'input1:c1' where input1 refers to the alias used by the input table that contains such column named c1.",
      "datatype": "STRING",
      "allowsLists": true,
      "rName": "sequence.column",
      "useInR": true,
      "rOrderNum": 50
    }
  ]
}