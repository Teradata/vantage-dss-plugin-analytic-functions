{
  "json_schema_major_version": "1",
  "json_schema_minor_version": "2",
  "json_content_version": "1",
  "function_name": "CCM",
  "function_version": "1.4",
  "function_type": "driver",
  "function_alias_name": "CCM",
  "function_r_name": "aa.ccm",
  "short_description": "Tests for causality in time-series using the CCM method.",
  "long_description": "The CCM function takes two or more time series as input and evaluates potential cause-effect relationships between them. Each time series column can be a single, long time series or a set of shorter subsequences that represent the same process. The function returns an effect size for each cause-effect pair. The CCM function can be used to determine the optimal value for one of its parameters, EmbeddingDimensions. In this special case, the cause and effect columns must be identical, and only a single cause and a single effect column are permitted. For more information, see CCM Arguments.",
  "input_tables": [
    {
      "requiredInputKind": [],
      "isOrdered": false,
      "partitionByOne": false,
      "name": "InputTable",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Table containing the input data.",
      "description": "Table containing the input data.",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "data",
      "useInR": true,
      "rOrderNum": 1
    }
  ],
  "argument_clauses": [
    {
      "targetTable": [
        "InputTable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "requiredLength": 1,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "SequenceIdColumn",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Column containing the sequence ids. A sequence is a sample of the time series.",
      "description": "Specify the name of the input table column that contains the time sequence identifiers. A time sequence is a sample of the time series.",
      "datatype": "COLUMN_NAMES",
      "allowsLists": false,
      "rName": "sequence.id.column",
      "useInR": true,
      "rOrderNum": 2
    },
    {
      "targetTable": [
        "InputTable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "requiredLength": 1,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "TimeColumn",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Column containing the timestamps.",
      "description": "Specify the name of the input table column that contains the time stamps.",
      "datatype": "COLUMN_NAMES",
      "allowsLists": false,
      "rName": "time.column",
      "useInR": true,
      "rOrderNum": 3
    },
    {
      "targetTable": [
        "InputTable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "CauseColumns",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Columns to be evaluated as potential causes.",
      "description": "Specify the names of the input table columns that contain values to evaluate as potential causes. To select best embedding dimension, CauseColumns and EffectColumns must specify the same single column.",
      "datatype": "COLUMN_NAMES",
      "allowsLists": true,
      "rName": "cause.columns",
      "useInR": true,
      "rOrderNum": 4
    },
    {
      "targetTable": [
        "InputTable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "EffectColumns",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Columns to be evaluated as potential effects.",
      "description": "Specify the names of the input table columns that contain values to evaluate as potential effects. To select best embedding dimension, CauseColumn and EffectColumn must specify the same single column.",
      "datatype": "COLUMN_NAMES",
      "allowsLists": true,
      "rName": "effect.columns",
      "useInR": true,
      "rOrderNum": 5
    },
    {
      "defaultValue": [
        100
      ],
      "lowerBound": 3,
      "upperBound": 1000,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "LibrarySize",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "The CCM algorithm works by using \u201clibraries\u201d of randomly selected points along the potential effect time series to predict values of the cause time series. A causal relationship is said to exist if the correlation between the predicted values of the cause time series and the actual values increases as the size of the library increases. Each input value must be greater than 0. The default value is 100.",
      "description": " If the function selects the best embedding dimension, you must omit this argument. Specify the sizes of the libraries that the function uses. Each library contains randomly selected points along the potential effect time series. The function uses the libraries to predict values of the cause time series. If the correlation between the predicted values of the cause time series and the actual values increases as the size of the library increases, a causal relationship is said to exist. Each library_size must be a positive INTEGER. If the function does not select the best embedding dimension, and you omit this argument, the function uses two library sizes: 100 and dimension * time_step + 1 ( dimension and time_step are specified by the arguments EmbeddingDimensions and TimeStep, respectively). If you specify a single library_size , the function uses two library sizes: library_size and dimension * time_step + 1.",
      "datatype": "INTEGER",
      "allowsLists": true,
      "rName": "library.size",
      "useInR": true,
      "rOrderNum": 6
    },
    {
      "defaultValue": [
        2
      ],
      "lowerBound": 0,
      "lowerBoundType": "EXCLUSIVE",
      "allowNaN": false,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "EmbeddingDimensions",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "The embedding dimension is an estimate of the number of past values to use when predicting a given value of the time series. The input value must be greater than 0. Thedefault value is 2.",
      "description": " Specify the number of past values to use when predicting a given value of the time series. If you specify only one dimension, the function uses it. If you specify multiple dimensions, the function selects the best one. Each dimension must be a positive INTEGER. Default: 2",
      "datatype": "INTEGER",
      "allowsLists": true,
      "rName": "embedding.dimension",
      "useInR": true,
      "rOrderNum": 7
    },
    {
      "defaultValue": 1,
      "lowerBound": 0,
      "upperBound": 2147483647,
      "lowerBoundType": "EXCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "TimeStep",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "The time.step parameter indicates the number of time steps between past values to use when predicting a given value of the time series. The input value must be greater than 0. The default value is 1.",
      "description": " Specify the number of time steps between past values to use when predicting a given value of the time series. The time_step must be a positive INTEGER. Default: 1",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "time.step",
      "useInR": true,
      "rOrderNum": 8
    },
    {
      "defaultValue": 100,
      "lowerBound": 0,
      "upperBound": 2147483647,
      "lowerBoundType": "EXCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "BootstrapIterations",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "The number of bootstrap iterations used to predict. The bootstrap process is used to estimate the uncertainty associated with the predicted values. The input value must be greater than 0. The default value is 100.",
      "description": " Specify the number of bootstrap iterations to use when predicting a given value of the time series. The function uses the bootstrap process to estimate the uncertainty associated with the predicted values. If the function selects the best embedding dimension, iterations has the value 1, and the function ignores this argument if it is specified. The iterations must be a positive INTEGER. Default: 100",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "bootstrap.iterations",
      "useInR": true,
      "rOrderNum": 9
    },
    {
      "defaultValue": 1,
      "lowerBound": 1,
      "upperBound": 2147483647,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "PredictStep",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": " If the best embedding dimension is needed to choose, the predict step is used for specify the number of time steps into the future to make predictions from past observations.",
      "description": " Specify the number of time steps into the future to make predictions from past observations, if the function selects the best embedding dimension. The predict_step must be a positive INTEGER. Default: 1",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "predict.step",
      "useInR": true,
      "rOrderNum": 10
    },
    {
      "defaultValue": false,
      "name": "SelfPredict",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "If self.predict is set to true, the ta.ccm function will attempt to predict each attribute using the attribute itself. If an attribute can predict its own time series well, the signal-to-noise ratio is too low for the ta.ccm algorithm to work effectively. The default value is false.",
      "description": " Specify whether the function tries to predict each attribute using the attribute itself. If an attribute can predict its own time series well, the signal-to-noise ratio is too low for the CCM algorithm to work effectively. Default: 'false' Note: If the function selects the best embedding dimension, this argument must specify 'true'.",
      "datatype": "BOOLEAN",
      "allowsLists": false,
      "rName": "self.predict",
      "useInR": true,
      "rOrderNum": 11
    },
    {
      "permittedValues": [
        "DistanceAndTime",
        "DistanceOnly"
      ],
      "defaultValue": "DistanceOnly",
      "isOutputColumn": false,
      "name": "PointSelectRule",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": " The rules to select nearest points if the best embedding dimension is needed to choose. Two options are provided. One is DistanceAndTime. The other one is DistanceOnly. The default value is DistanceOnly.",
      "description": " Specify the rule for selecting the nearest points if the function is to select the best embedding dimension: Option Description 'DistanceOnly' (Default) Function determines nearest points based only on computed distance. 'DistanceAndTime' Function determines nearest points based on both computed distance and time, which matches procedure described in documentation for R package multispatialCCM (version 1.0).",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "point.select.rule",
      "useInR": true,
      "rOrderNum": 13
    },
    {
      "permittedValues": [
        "Single",
        "Distribute"
      ],
      "defaultValue": "Single",
      "isOutputColumn": false,
      "name": "ExecutionMode",
      "alternateNames": [
        "Mode"
      ],
      "isRequired": false,
      "rDescription": "Specifies the execution mode. CCM can be executed in single mode and distribute node. The default value is single mode.",
      "description": " Specify the execution mode: Option Description 'single' (Default) Function runs on single node and outputs results similar to those produced by R package multispatialCCM (version 1.0). Use 'single' unless input table is large or 'single' is slow. 'distribute' Function distributes data and runs across multiple vworkers. To parallelize run, function uses an algorithm different from that of R, and its results can be different from those of R.",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "mode",
      "useInR": true,
      "rOrderNum": 14
    },
    {
      "lowerBound": -9223372036854775808,
      "upperBound": 9223372036854775807,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "Seed",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the random seed used to initialize the algorithm.",
      "description": " Specify the random seed the algorithm uses for repeatable results (for more information, see Nondeterministic Results). The seed must be a LONG value.",
      "datatype": "LONG",
      "allowsLists": false,
      "rName": "seed",
      "useInR": true,
      "rOrderNum": 12
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "SequenceInputBy",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the LIST_VECTOR of column(s) that uniquely identifies each row of the input argument INPUT_ARG_NAME. The argument is used to ensure deterministic results for functions which produce results that vary from run to run.",
      "description": "Specifies the input column(s) that uniquely identify each row of input table. The format is 'input1:c1' where input1 refers to the alias used by the input table that contains such column named c1.",
      "datatype": "STRING",
      "allowsLists": true,
      "rName": "sequence.column",
      "useInR": true,
      "rOrderNum": 50
    }
  ]
}