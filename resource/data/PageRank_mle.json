{
  "json_schema_major_version": "1",
  "json_schema_minor_version": "2",
  "json_content_version": "1",
  "function_name": "PageRank",
  "function_version": "1.6",
  "function_type": "graph",
  "function_alias_name": "PageRank",
  "function_r_name": "aa.pagerank",
  "short_description": "Computes the page rank for all pages in a web graph.",
  "long_description": "The PageRank function computes the PageRank values for a directed graph, weighted or unweighted. PageRank is a link analysis algorithm. It assigns a numerical weight (between 0 and 1) to each node in a directed graph, for the purpose of measuring the relative importance of the node to the graph. The sum of the PageRank values of the nodes is 1. PageRank is applicable to any collection of entities with reciprocal quotations and references.",
  "outputSchema": {
    "property": "outputSchema",
    "outputId": "standard",
    "instructions": [
      {
        "instruction": "ADD",
        "placement": "end",
        "arguments": [
          {
            "source": "parameter",
            "name": "Accumulate.*",
            "dataType": "unchanged",
            "manipulations": []
          },
          {
            "source": "predefined",
            "name": "pagerank",
            "dataType": "double precision",
            "manipulations": []
          }
        ]
      }
    ]
  },
  "input_tables": [
    {
      "requiredInputKind": [
        "PartitionByKey"
      ],
      "isOrdered": false,
      "partitionByOne": false,
      "name": "vertices",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "The input table contains vertices in the graph. ",
      "description": "The input table contains vertices in the graph. ",
      "datatype": "TABLE_ALIAS",
      "allowsLists": false,
      "rName": "vertices.data",
      "useInR": true,
      "rOrderNum": 1
    },
    {
      "requiredInputKind": [
        "PartitionByKey"
      ],
      "isOrdered": false,
      "partitionByOne": false,
      "name": "edges",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "The input table contains edges in the graph. ",
      "description": "The input table contains edges in the graph. ",
      "datatype": "TABLE_ALIAS",
      "allowsLists": false,
      "rName": "edges.data",
      "useInR": true,
      "rOrderNum": 2
    }
  ],
  "argument_clauses": [
    {
      "targetTable": [
        "edges"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "TargetKey",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the target key columns in the edges table",
      "description": "Specify the target key columns in the edges table.",
      "datatype": "COLUMNS",
      "allowsLists": true,
      "rName": "  target.key",
      "useInR": true,
      "rOrderNum": 3
    },
    {
      "targetTable": [
        "edges"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "NUMERIC"
      ],
      "requiredLength": 1,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "EdgeWeight",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": " Specifies the column in the edges table that contains the edge weight, which must be a positive value. By default, all edges have the same weight (that is, the graph is unweighted). ",
      "description": " Specify the column in the edges table that contains the edge weight, which must be a positive value. Default behavior: All edges have the same weight (that is, the graph is unweighted).",
      "datatype": "COLUMNS",
      "allowsLists": false,
      "rName": "weights",
      "useInR": true,
      "rOrderNum": 4
    },
    {
      "targetTable": [
        "vertices"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "Accumulate",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the vertices table columns to copy to the output table.",
      "description": " Specify the vertices table columns to copy to the output table.",
      "datatype": "COLUMNS",
      "allowsLists": true,
      "rName": "accumulate",
      "useInR": true,
      "rOrderNum": 8
    },
    {
      "defaultValue": 0.85,
      "lowerBound": 0,
      "upperBound": 1,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "DampFactor",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": " Specifies the value to use in the PageRank formula. The damp_factor must be a DOUBLE PRECISION value between 0 and 1. The default value is 0.85.",
      "description": " Specify the value to use in the PageRank formula. The damp_factor must be a DOUBLE PRECISION value between 0 and 1. Default: 0.85",
      "datatype": "DOUBLE",
      "allowsLists": false,
      "rName": "damping",
      "useInR": true,
      "rOrderNum": 5
    },
    {
      "defaultValue": 20,
      "rDefaultValue": 1000,
      "lowerBound": 0,
      "upperBound": 2147483647,
      "lowerBoundType": "EXCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "MaxIterNum",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the maximum number of iterations for which the algorithm runs before the function completes. The max_iterations must be a positive INTEGER value. The default value is 1000. Note: max_iterations is the number of SQL-GR iterations (that is, the algorithm iterations shown in AMC minus 3). ",
      "description": " Specify the maximum number of function iterations before the function completes. The max_iterations must be a positive INTEGER value. Note: The max_iterations is the number of function iterations (that is, the SQL-GR iterations minus 3). Default: 20",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "niter",
      "useInR": true,
      "rOrderNum": 6
    },
    {
      "defaultValue": 0.0001,
      "rDefaultValue": 0.001,
      "lowerBound": 0,
      "upperBound": Infinity,
      "lowerBoundType": "EXCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "StopThreshold",
      "alternateNames": [
        "Threshold"
      ],
      "isRequired": false,
      "rDescription": "Specifies the convergence criteria value. The threshold must be a DOUBLE PRECISION value. The default value is 0.001.",
      "description": " Specify the convergence criteria value. The threshold must be a DOUBLE PRECISION value. Default: 0.0001",
      "datatype": "DOUBLE",
      "allowsLists": false,
      "rName": "eps",
      "useInR": true,
      "rOrderNum": 7
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "SequenceInputBy",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the LIST_VECTOR of column(s) that uniquely identifies each row of the input argument INPUT_ARG_NAME. The argument is used to ensure deterministic results for functions which produce results that vary from run to run.",
      "description": "Specifies the input column(s) that uniquely identify each row of input table. The format is 'input1:c1' where input1 refers to the alias used by the input table that contains such column named c1.",
      "datatype": "STRING",
      "allowsLists": true,
      "rName": "sequence.column",
      "useInR": true,
      "rOrderNum": 50
    }
  ]
}