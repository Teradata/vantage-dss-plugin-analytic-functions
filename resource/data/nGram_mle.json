{
  "json_schema_major_version": "1",
  "json_schema_minor_version": "2",
  "json_content_version": "1",
  "function_name": "nGram",
  "function_version": "1.9",
  "function_type": "non-driver",
  "function_alias_name": "NGrams",
  "function_r_name": "aa.ngram",
  "short_description": "Generates n-grams and their counts from specified input column.",
  "long_description": "Tokenizes the specified column and returns each unique n-gram with its associated count.",
  "input_tables": [
    {
      "requiredInputKind": [
        "PartitionByAny"
      ],
      "isOrdered": false,
      "partitionByOne": false,
      "name": "input",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Each row of the input table contains a document to be tokenized. The input table can have additional rows, some or all of which the function returns in the output table.",
      "description": "Each row of the input table contains a document to be tokenized. The input table can have additional rows, some or all of which the function returns in the output table.",
      "datatype": "TABLE_ALIAS",
      "allowsLists": false,
      "rName": "data",
      "useInR": true,
      "rOrderNum": 1
    }
  ],
  "argument_clauses": [
    {
      "targetTable": [
        "input"
      ],
      "checkDuplicate": false,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "STRING"
      ],
      "requiredLength": 1,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "TextColumn",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "The name of the column that contains the input text. Input columns must contain string SQL types.",
      "description": "Specify the name of the column that contains the input text. This column must have a SQL string data type.",
      "datatype": "COLUMNS",
      "allowsLists": false,
      "rName": "text.column",
      "useInR": true,
      "rOrderNum": 2
    },
    {
      "targetTable": [
        "input"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "Accumulate",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "The names of the columns to return for each n-gram. These columns cannot have the same names as those specified by the arguments ngram, num.grams.column, and total.count.column. By default, the function returns all input columns for each n-gram.",
      "description": " Specify the names of the input table columns to copy to the output table for each n -gram. These columns cannot have the same names as those specified by the arguments NGramColumn, NumGramsColumn, and TotalCountColumn. Default: All input columns for each n -gram",
      "datatype": "COLUMNS",
      "allowsLists": true,
      "rName": "accumulate",
      "useInR": true,
      "rOrderNum": 11
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "Grams",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "A list of integers or ranges of integers that specify the length, in words, of each ngram (that is, the value of n). A range_of_values has the syntax integer1- integer2, where integer1 <= integer2. The values of n, integer1, and integer2 must be positive.",
      "description": "Specify the length, in words, of each n -gram (that is, the value of n ). A value_range has the syntax integer1 - integer2 , where integer1 <= integer2 . The values of n , integer1 , and integer2 must be positive.",
      "datatype": "STRING",
      "allowsLists": true,
      "rName": "grams",
      "useInR": true,
      "rOrderNum": 4
    },
    {
      "defaultValue": true,
      "name": "OverLapping",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "A Boolean value that specifies whether the function allows overlapping n-grams. When this value is 'true' (the default), each word in each sentence starts an n-gram, if enough words follow it (in the same sentence) to form a whole n-gram of the specified size. For information on sentences, see the description of the reset argument.",
      "description": " Specify whether the function allows overlapping n -grams. Default: 'true' (Each word in each sentence starts an n -gram, if enough words follow it in the same sentence to form a whole n -gram of the specified size. For information on sentences, see the Reset argument description.)",
      "datatype": "BOOLEAN",
      "allowsLists": false,
      "rName": "overlapping",
      "useInR": true,
      "rOrderNum": 5
    },
    {
      "defaultValue": true,
      "name": "ConvertToLowerCase",
      "alternateNames": [
        "ToLowerCase"
      ],
      "isRequired": false,
      "rDescription": "A Boolean value that specifies whether the function converts all letters in the input text to lowercase. The default value is 'true'.",
      "description": "A Boolean value that specifies whether the function converts all letters in the input text to lowercase. The default value is 'true'.",
      "datatype": "BOOLEAN",
      "allowsLists": false,
      "rName": "to.lower.case",
      "useInR": true,
      "rOrderNum": 6
    },
    {
      "permittedValues": [],
      "defaultValue": "[\\s]+",
      "isOutputColumn": false,
      "name": "Delimiter",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "A regular expression that specifies the character or string that separates words in the input text. The default value is the set of all whitespace characters which includes the characters for space, tab, newline, carriage return and some others.",
      "description": " Specify, with a regular expression, the character or string that separates words in the input text. Default: \"\\\\s+\" (all whitespace characters\u2014space, tab, newline, carriage return and others)",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "delimiter",
      "useInR": true,
      "rOrderNum": 3
    },
    {
      "permittedValues": [],
      "defaultValue": "[`~#^&*()-]",
      "isOutputColumn": false,
      "name": "Punctuation",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "A regular expression that specifies the punctuation characters for the function to remove before evaluating the input text. The default characters to remove are: `~#^&*()-",
      "description": " Specify, with a regular expression, the punctuation characters for the function to remove before evaluating the input text. Note: The function applies the Reset argument before the Punctuation argument; that is, it splits the input into sentences before removing punctuation characters. Default: '[`~#^&*()-]'",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "punctuation",
      "useInR": true,
      "rOrderNum": 7
    },
    {
      "permittedValues": [],
      "defaultValue": "[.,?!]",
      "isOutputColumn": false,
      "name": "Reset",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "A regular expression that specifies the character or string that ends a sentence. The default sentence-ending characters are: .,?! At the end of a sentence, the function discards any partial n-grams and searches for the next n-gram at the beginning of the next sentence. An n-gram cannot span two sentences.",
      "description": " Specify, with a regular expression, the character or string that ends a sentence. At the end of a sentence, the function discards any partial n -grams and searches for the next n -gram at the beginning of the next sentence. An n -gram cannot span sentences. Note: The function applies the Reset argument before the Punctuation argument; that is, it splits the input into sentences before removing punctuation characters. Default: '[.,?!]'",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "reset",
      "useInR": true,
      "rOrderNum": 8
    },
    {
      "defaultValue": false,
      "name": "OutputTotalGramCount",
      "alternateNames": [
        "TotalGramCount"
      ],
      "isRequired": false,
      "rDescription": "A Boolean value that specifies whether the function returns the total number of ngrams in the document (that is, in the row). The default value is 'false'. If you specify 'true', then the name of the returned column is specified by the total.count.column argument. Note: The total number of n-grams is not necessarily the number of unique ngrams.",
      "description": " A Boolean value that specifies whether the function returns the total number of ngrams in the document (that is, in the row). The default value is 'false'. If you specify 'true', then the name of the returned column is specified by the TotalCountColumn argument. Note: The total number of n-grams is not necessarily the number of unique ngrams.",
      "datatype": "BOOLEAN",
      "allowsLists": false,
      "rName": "total.gram.count",
      "useInR": true,
      "rOrderNum": 9
    },
    {
      "permittedValues": [],
      "defaultValue": "ngram",
      "isOutputColumn": true,
      "name": "NGramColName",
      "alternateNames": [
        "NGramColumn"
      ],
      "isRequired": false,
      "rDescription": "The name of the column that is to contain the generated n-grams. The default value is 'ngram'.",
      "description": "The name of the column that is to contain the generated n-grams. The default value is 'ngram'.",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "n.gram.column",
      "useInR": true,
      "rOrderNum": 12
    },
    {
      "permittedValues": [],
      "defaultValue": "n",
      "isOutputColumn": true,
      "name": "GramLengthColName",
      "alternateNames": [
        "NumGramsColumn"
      ],
      "isRequired": false,
      "rDescription": "The name of the column that is to contain the length of n-gram (in words). The default value is 'n'.",
      "description": "The name of the column that is to contain the length of n-gram (in words). The default value is 'n'.",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "num.grams.column",
      "useInR": true,
      "rOrderNum": 13
    },
    {
      "permittedValues": [],
      "defaultValue": "frequency",
      "isOutputColumn": true,
      "name": "FrequencyColName",
      "alternateNames": [
        "FrequencyColumn"
      ],
      "isRequired": false,
      "rDescription": " The name of the column that is to contain the count of each unique n-gram (that is, the number of times that each unique n-gram appears in the document). The default value is 'frequency'.",
      "description": " The name of the column that is to contain the count of each unique n-gram (that is, the number of times that each unique n-gram appears in the document). The default value is 'frequency'.",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "frequency.column",
      "useInR": true,
      "rOrderNum": 14
    },
    {
      "permittedValues": [],
      "defaultValue": "totalcnt",
      "isOutputColumn": true,
      "name": "TotalCountColName",
      "alternateNames": [
        "TotalCountColumn"
      ],
      "isRequired": false,
      "rDescription": "The name of the column to return if the value of the total.gram.count argument is 'true'. The default value is 'totalcnt'.",
      "description": "The name of the column to return if the value of the TotalGramCount argument is 'true'. The default value is 'totalcnt'.",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "total.count.column",
      "useInR": true,
      "rOrderNum": 10
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "SequenceInputBy",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the LIST_VECTOR of column(s) that uniquely identifies each row of the input argument INPUT_ARG_NAME. The argument is used to ensure deterministic results for functions which produce results that vary from run to run.",
      "description": "Specifies the input column(s) that uniquely identify each row of input table. The format is 'input1:c1' where input1 refers to the alias used by the input table that contains such column named c1.",
      "datatype": "STRING",
      "allowsLists": true,
      "rName": "sequence.column",
      "useInR": true,
      "rOrderNum": 50
    }
  ]
}