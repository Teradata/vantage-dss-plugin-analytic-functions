{
  "json_schema_major_version": "1",
  "json_schema_minor_version": "2",
  "json_content_version": "1",
  "function_name": "POSTagger",
  "function_version": "2.7",
  "function_type": "non-driver",
  "function_alias_name": "POSTagger",
  "function_r_name": "aa.pos.tagger",
  "short_description": "The function tags the part of speech of the input text.",
  "long_description": "The POSTagger function creates part-of-speech (POS) tags for the words in the input text. POS tagging is the first step in the syntactic analysis of a language, and an important preprocessing step in many natural language-processing applications. The POSTagger function was developed on the Penn Treebank Project and Chinese Penn Treebank Project data set. Its POS tags comply with the tags defined by the two projects. For the parts of speech used, see the following:",
  "outputSchema": {
    "property": "outputSchema",
    "outputId": "standard",
    "instructions": [
      {
        "instruction": "ADD",
        "placement": "end",
        "arguments": [
          {
            "source": "predefined",
            "name": "word_sn",
            "dataType": "integer",
            "manipulations": []
          },
          {
            "source": "predefined",
            "name": "word",
            "dataType": "varchar(400)",
            "manipulations": []
          },
          {
            "source": "predefined",
            "name": "pos_tag",
            "dataType": "varchar(20)",
            "manipulations": []
          },
          {
            "source": "parameter",
            "name": "Accumulate.*",
            "dataType": "unchanged",
            "manipulations": []
          }
        ]
      }
    ]
  },
  "input_tables": [
    {
      "requiredInputKind": [
        "PartitionByAny"
      ],
      "isOrdered": false,
      "partitionByOne": false,
      "name": "input",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "The input table that contains the input texts. ",
      "description": "The input table that contains the input texts. ",
      "datatype": "TABLE_ALIAS",
      "allowsLists": false,
      "rName": "data",
      "useInR": true,
      "rOrderNum": 1
    }
  ],
  "argument_clauses": [
    {
      "targetTable": [
        "input"
      ],
      "checkDuplicate": true,
      "allowedTypes": [
        "bytea"
      ],
      "allowedTypeGroups": [
        "STRING"
      ],
      "requiredLength": 1,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "TextColumn",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the name of the input column that contains the text to be tagged.",
      "description": "Specify the name of the input column that contains the text to tag.",
      "datatype": "COLUMNS",
      "allowsLists": false,
      "rName": "text.column",
      "useInR": true,
      "rOrderNum": 2
    },
    {
      "targetTable": [
        "input"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "Accumulate",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the names of the input table columns to copy to the output table. Note: If you intend to use the ta.postagger output table as input to the function \"ta.textchunker\", then this argument must specify the input table columns that comprise the partition key.",
      "description": " Specify the names of the input table columns to copy to the output table. Note: If you intend to use the POSTagger output table as input to the function TextChunker, then this argument must specify the input table columns that comprise the partition key.",
      "datatype": "COLUMNS",
      "allowsLists": true,
      "rName": "accumulate",
      "useInR": true,
      "rOrderNum": 4
    },
    {
      "permittedValues": [
        "en",
        "zh_CN"
      ],
      "defaultValue": "en",
      "isOutputColumn": false,
      "name": "InputLanguage",
      "alternateNames": [
        "Language"
      ],
      "isRequired": false,
      "rDescription": "Specifies the language of the input text. The supported values are: en (English, the default value), zh_CN (Simplified Chinese)",
      "description": " Specify the language of the input text: Option Description 'en' (Default) English 'zh_CN' Simplified Chinese",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "language",
      "useInR": true,
      "rOrderNum": 3
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "SequenceInputBy",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the LIST_VECTOR of column(s) that uniquely identifies each row of the input argument INPUT_ARG_NAME. The argument is used to ensure deterministic results for functions which produce results that vary from run to run.",
      "description": "Specifies the input column(s) that uniquely identify each row of input table. The format is 'input1:c1' where input1 refers to the alias used by the input table that contains such column named c1.",
      "datatype": "STRING",
      "allowsLists": true,
      "rName": "sequence.column",
      "useInR": true,
      "rOrderNum": 50
    }
  ]
}