{
  "json_schema_major_version": "1",
  "json_schema_minor_version": "2",
  "json_content_version": "1",
  "function_name": "DWT2D",
  "function_version": "1.6",
  "function_type": "driver",
  "function_alias_name": "DWT2D",
  "function_r_name": "aa.dwt2d",
  "short_description": "This function performs 2D forward wavelet transform.",
  "long_description": "The DWT2D function implements the Mallat algorithm (an iterate algorithm in the Discrete Wavelet Transform field) on 2-dimensional matrixes and applies wavelet transform on multiple sequences simultaneously. The input is a set of sequences. Typically, each sequence is a matrix that contains a position in 2-dimensional space (y and x indexes or coordinates) and its corresponding values. You specify the wavelet name or wavelet filter table, transform level, and (optionally) extension mode. The function returns the transformed sequences in Hilbert space with the corresponding component identifiers and indices. (The transformation is also called the decomposition.) This is a typical DWT2D use case:",
  "input_tables": [
    {
      "requiredInputKind": [],
      "isOrdered": false,
      "partitionByOne": false,
      "name": "InputTable",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the name of the table or view that contains the sequences to be transformed",
      "description": "Specifies the name of the table or view that contains the sequences to be transformed",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "data",
      "useInR": true,
      "rOrderNum": 1
    },
    {
      "requiredInputKind": [],
      "isOrdered": false,
      "partitionByOne": false,
      "name": "WaveletFilterTable",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the name of the table that contains the coefficients of the wave filters.",
      "description": "Specifies the name of the table that contains the coefficients of the wave filters.",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "wavelet.filter",
      "useInR": true,
      "rOrderNum": 6
    }
  ],
  "output_tables": [
    {
      "isOutputTable": true,
      "name": "OutputTable",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the name for the table that the function creates to store the coefficients generated by the wavelet transform. This table must not exist.",
      "description": "Specify the name for the table that the function creates to store the coefficients output by the wavelet transform. This table must not exist.",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "coefficient",
      "useInR": true,
      "rOrderNum": 100
    },
    {
      "isOutputTable": true,
      "name": "MetaTable",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the name for the table that the function creates to store the meta information for the wavelet transform. This table must not exist.",
      "description": "Specify the name for the table that the function creates to store the meta information for the wavelet transform. This table must not exist.",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "meta.table",
      "useInR": true,
      "rOrderNum": 101
    }
  ],
  "argument_clauses": [
    {
      "targetTable": [
        "InputTable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "IndexColumns",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the columns that contain the indexes of the input sequences. For a matrix,  indexy_column contains the y coordinates and indexx_column contains the x coordinates.",
      "description": "Specify the columns that contain the indexes of the input sequences. For a matrix, indexy_column contains the y coordinates and indexx_column contains the x coordinates.",
      "datatype": "COLUMN_NAMES",
      "allowsLists": true,
      "rName": "index.columns",
      "useInR": true,
      "rOrderNum": 3
    },
    {
      "targetTable": [
        "InputTable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "TargetColumns",
      "alternateNames": [
        "InputColumns"
      ],
      "isRequired": true,
      "rDescription": "Specifies the names of the columns in the input table or view that contain the data to be transformed. These columns must contain numeric values between -1e308 and 1e308. The function treats NULL as 0.",
      "description": "Specify the names of the columns in the input table or view that contain the data to transform. These columns must contain numeric values between -1e 308 and 1e 308 . The function treats NULL as 0.",
      "datatype": "COLUMN_NAMES",
      "allowsLists": true,
      "rName": "input.columns",
      "useInR": true,
      "rOrderNum": 2
    },
    {
      "targetTable": [
        "InputTable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "DISTRIBUTIONTYPE"
      ],
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "PartitionColumns",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the names of the partition.columns, which identify the sequences. Rows with the same partition.columns values belong to the same sequence. If you specify multiple partition.columns, then the function treats the first one as the distribute key of the output and meta tables. By default, all rows belong to one sequence, and the function generates a distribute key column named dwt_idrandom_name in both the output table and the meta table. In both tables, every cell of dwt_idrandom_name has the value 1.",
      "description": " Specify the names of the partition columns, which identify the sequences. Rows with the same partition column values belong to the same sequence. If you specify multiple partition columns, the function treats the first one as the distribute key of the output and meta tables. Default behavior: All rows belong to one sequence, and the function creates a distribute key column named dwt_id random_name in both the output table and the meta table. In both tables, every cell of dwt_id random_name has the value 1.",
      "datatype": "COLUMN_NAMES",
      "allowsLists": true,
      "rName": "partition.columns",
      "useInR": true,
      "rOrderNum": 10
    },
    {
      "lowerBound": 1,
      "upperBound": 1000,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "WaveletTransformLevel",
      "alternateNames": [
        "Level"
      ],
      "isRequired": true,
      "rDescription": "Specifies the wavelet transform level. The value WaveletTransformLevel must be an integer in the range [1, 1000].",
      "description": "Specify the wavelet transform level. The value level must be an integer in the range [1,\u00a01000].",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "level",
      "useInR": true,
      "rOrderNum": 7
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "name": "Range",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the start and end indexes of the input data, all of which must be integers. The default values for each sequence are: \u2022 starty: minimum y index \u2022 startx: minimum x index \u2022 endy: maximum y index \u2022 endx: maximum x index. The function treats any NULL value as 0. The range can specify a maximum of 1,000,000 cells.",
      "description": " Specify the start and end indexes of the input data, all of which must be integers. The range can specify a maximum of 1,000,000 cells. The function treats any NULL value as 0. Index Default starty minimum y index startx minimum x index endy maximum y index endx maximum x index",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "range",
      "useInR": true,
      "rOrderNum": 4
    },
    {
      "defaultValue": true,
      "name": "CompactOutput",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies whether to ignore (not output) rows in which all coefficient values are very small (having an absolute value less than 1e-12). The default value is 'true'. For a sparse input matrix, ignoring such rows reduces the output table size.",
      "description": " Specify whether to ignore rows in which all coefficient values have an absolute value less than 1e -12 ). Default: 'true'. For a sparse input matrix, ignoring such rows reduces the output table size.",
      "datatype": "BOOLEAN",
      "allowsLists": false,
      "rName": "compact.output",
      "useInR": true,
      "rOrderNum": 9
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "name": "Wavelet",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies a wavelet filter name",
      "description": "[Required if you omit WaveletFilterTable] Specify a wavelet filter name from the table Supported Wavelet Filter Names in DWT Arguments.",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "wavelet",
      "useInR": true,
      "rOrderNum": 5
    },
    {
      "permittedValues": [
        "sym",
        "zpd",
        "ppd"
      ],
      "defaultValue": "sym",
      "isOutputColumn": false,
      "name": "ExtensionMode",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": " Specifies the method for handling border distortion, an extension_mode from Table 3 - 104. The default value is 'sym'.",
      "description": " Specify the method for handling border distortion, an extension_mode from the table Supported Extension Modes in DWT Arguments. Default: 'sym'",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "extension.mode",
      "useInR": true,
      "rOrderNum": 8
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "SequenceInputBy",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the LIST_VECTOR of column(s) that uniquely identifies each row of the input argument INPUT_ARG_NAME. The argument is used to ensure deterministic results for functions which produce results that vary from run to run.",
      "description": "Specifies the input column(s) that uniquely identify each row of input table. The format is 'input1:c1' where input1 refers to the alias used by the input table that contains such column named c1.",
      "datatype": "STRING",
      "allowsLists": true,
      "rName": "sequence.column",
      "useInR": true,
      "rOrderNum": 50
    }
  ]
}