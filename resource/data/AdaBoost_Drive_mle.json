{
  "json_schema_major_version": "1",
  "json_schema_minor_version": "2",
  "json_content_version": "1",
  "function_name": "AdaBoost_Drive",
  "function_version": "1.23",
  "function_type": "driver",
  "function_alias_name": "AdaBoost",
  "function_r_name": "aa.adaboost.drive",
  "short_description": "This is a driver function to build a adaboost model",
  "long_description": "The Adaboost_Drive function takes the entire data set as training input and builds an ensemble of weak classifiers from it",
  "input_tables": [
    {
      "requiredInputKind": [],
      "isOrdered": false,
      "partitionByOne": false,
      "name": "AttributeTable",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the name of the table that contains the attributes and values of the data.",
      "description": "Specifies the name of the table that contains the attributes and values of the data.",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "attribute.data",
      "useInR": true,
      "rOrderNum": 1
    },
    {
      "requiredInputKind": [],
      "isOrdered": false,
      "partitionByOne": false,
      "name": "ResponseTable",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the name of the table that contains the responses (labels) of the data.",
      "description": "Specifies the name of the table that contains the responses (labels) of the data.",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "response.data",
      "useInR": true,
      "rOrderNum": 5
    },
    {
      "requiredInputKind": [],
      "isOrdered": false,
      "partitionByOne": false,
      "name": "CategoricalAttributeTable",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the name of the table that contains the names of the categorical attributes.",
      "description": "Specifies the name of the table that contains the names of the categorical attributes.",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "categorical.attribute.data",
      "useInR": true,
      "rOrderNum": 4
    }
  ],
  "output_tables": [
    {
      "isOutputTable": true,
      "name": "OutputTable",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the name of the output table in which the function stores the predictive model it generates.",
      "description": "Specify the name of the output table where the function stores the predictive model it creates.",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "model.table",
      "useInR": true,
      "rOrderNum": 100
    }
  ],
  "argument_clauses": [
    {
      "targetTable": [
        "AttributeTable",
        "ResponseTable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "IdColumns",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the names of the columns in the response and attribute tables that specify the identifier of the instance.",
      "description": "Specify the names of the columns in the response and attribute tables that specify the identifier of the instance.",
      "datatype": "COLUMN_NAMES",
      "allowsLists": true,
      "rName": "id.columns",
      "useInR": true,
      "rOrderNum": 6
    },
    {
      "targetTable": [
        "AttributeTable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "AttributeNameColumns",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the names of attribute table columns that contain the data attributes.",
      "description": "Specify the names of attribute table columns that contain the data attributes.",
      "datatype": "COLUMN_NAMES",
      "allowsLists": true,
      "rName": "attribute.name.columns",
      "useInR": true,
      "rOrderNum": 2
    },
    {
      "targetTable": [
        "AttributeTable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "requiredLength": 1,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "AttributeValueColumn",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the names of attribute table columns that contain the data values.",
      "description": "Specifies the names of attribute table columns that contain the data values.",
      "datatype": "COLUMN_NAMES",
      "allowsLists": false,
      "rName": "attribute.value.column",
      "useInR": true,
      "rOrderNum": 3
    },
    {
      "targetTable": [
        "ResponseTable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "requiredLength": 1,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "ResponseColumn",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the name of the response table column that contains the responses (labels) of the data.",
      "description": "Specify the name of the response table column that contains the responses (labels) of the data.",
      "datatype": "COLUMN_NAMES",
      "allowsLists": false,
      "rName": "response.column",
      "useInR": true,
      "rOrderNum": 7
    },
    {
      "defaultValue": 20,
      "lowerBound": 2,
      "upperBound": 200,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "IterNum",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the number of iterations to boost the weak classifiers, which is also the number of weak classifiers in the ensemble (T). The iterations must an INTEGER in the range [2, 200]. The default value is 20.",
      "description": " Specify the number of iterations to boost the weak classifiers, which is also the number of weak classifiers in the ensemble ( T ). The iterations must be an INTEGER in the range [2,\u00a0 200]. Default: 20",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "iter.num",
      "useInR": true,
      "rOrderNum": 8
    },
    {
      "defaultValue": 10,
      "lowerBound": 1,
      "upperBound": 2147483647,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "NumSplits",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the number of splits to try for each attribute in the node splitting. The splits must an INTEGER. The default value is 10.",
      "description": " Specify the number of splits to try for each attribute in the node splitting. The splits must be an INTEGER. Default: 10",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "num.splits",
      "useInR": true,
      "rOrderNum": 9
    },
    {
      "defaultValue": true,
      "name": "ApproxSplits",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies whether to use approximate percentiles. The default value is 'true'.",
      "description": " Specify whether to use approximate percentiles. Note: With approximate percentiles, the function is nondeterministic; without them, it is deterministic. For more information, see Nondeterministic Results. Default: 'true' (nondeterministic)",
      "datatype": "BOOLEAN",
      "allowsLists": false,
      "rName": "approx.splits",
      "useInR": true,
      "rOrderNum": 10
    },
    {
      "permittedValues": [
        "GINI",
        "ENTROPY"
      ],
      "defaultValue": "gini",
      "isOutputColumn": false,
      "name": "SplitMeasure",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the type of measure to use in node splitting. The default value is 'gini'.",
      "description": " Specify the type of measure to use in node splitting. Default: 'gini'",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "split.measure",
      "useInR": true,
      "rOrderNum": 11
    },
    {
      "defaultValue": 3,
      "lowerBound": 1,
      "upperBound": 10,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "maxDepth",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the maximum depth of the tree. The max_depth must an INTEGER in the range [1, 10]. The default value is 3.",
      "description": " Specify the depth of each weak classifier. The max_depth must be an INTEGER in the range [1, 10]. Default: 3 Note: MaxDepth does not control the depth of the final tree, as MaxDepth in DecisionTree does.",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "max.depth",
      "useInR": true,
      "rOrderNum": 12
    },
    {
      "defaultValue": 100,
      "lowerBound": 1,
      "upperBound": 2147483647,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "MinNodeSize",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the minimum size of any particular node within each decision tree. The min_node_size must an INTEGER. The default value is 100.",
      "description": " Specify the minimum size of any node within each decision tree. The min_node_size must be an INTEGER. Default: 100",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "min.node.size",
      "useInR": true,
      "rOrderNum": 13
    },
    {
      "defaultValue": false,
      "name": "OutputProb",
      "alternateNames": [
        "OutputResponseProbDist"
      ],
      "isRequired": false,
      "rDescription": "Switch to enable/disable output of probability distribution for output labels.",
      "description": "Switch to enable/disable output of probability distribution for output labels.",
      "datatype": "BOOLEAN",
      "allowsLists": false,
      "rName": "output.response.probdist",
      "useInR": true,
      "rOrderNum": 14
    },
    {
      "permittedValues": [
        "graycode",
        "ordinal",
        "hashing"
      ],
      "defaultValue": "graycode",
      "isOutputColumn": false,
      "name": "CategoricalEncoding",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies which encoding method is used for categorical variables.",
      "description": "Specifies which encoding method is used for categorical variables.",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "categorical.encoding",
      "useInR": true,
      "rOrderNum": 15
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "UniqueId",
      "alternateNames": [
        "SequenceInputBy"
      ],
      "isRequired": false,
      "rDescription": "Specifies the LIST_VECTOR of column(s) that uniquely identifies each row of the input argument INPUT_ARG_NAME. The argument is used to ensure deterministic results for functions which produce results that vary from run to run.",
      "description": "Specifies the input column(s) that uniquely identify each row of input table. The format is 'input1:c1' where input1 refers to the alias used by the input table that contains such column named c1.",
      "datatype": "STRING",
      "allowsLists": true,
      "rName": "sequence.column",
      "useInR": true,
      "rOrderNum": 50
    }
  ]
}