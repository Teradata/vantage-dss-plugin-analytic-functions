{
  "json_schema_major_version": "1",
  "json_schema_minor_version": "2",
  "json_content_version": "1",
  "function_name": "LoopyBeliefPropagation",
  "function_version": "1.5",
  "function_type": "non-driver",
  "function_alias_name": "LoopyBeliefPropagation",
  "function_r_name": "aa.loopy.belief.propagation",
  "short_description": "This function predicts the labels for unobserved nodes based on the labels of observed nodes.",
  "long_description": "Belief propagation, or sum-product message passing, is an algorithm for inferring probabilities from graphical models, such as Bayesian networks and Markov random fields. The LoopyBeliefPropagation function calculates, for a Bayesian network of binary variables, the marginal distribution for each unobserved variable, conditional on any observed variables.",
  "input_tables": [
    {
      "requiredInputKind": [
        "PartitionByKey"
      ],
      "isOrdered": false,
      "partitionByOne": false,
      "name": "edges",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "",
      "description": "",
      "datatype": "TABLE_ALIAS",
      "allowsLists": false,
      "rName": "edges.data",
      "useInR": true,
      "rOrderNum": 2
    },
    {
      "requiredInputKind": [
        "PartitionByKey"
      ],
      "isOrdered": false,
      "partitionByOne": false,
      "name": "vertices",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "",
      "description": "",
      "datatype": "TABLE_ALIAS",
      "allowsLists": false,
      "rName": "vertices.data",
      "useInR": true,
      "rOrderNum": 1
    },
    {
      "requiredInputKind": [
        "PartitionByKey"
      ],
      "isOrdered": false,
      "partitionByOne": false,
      "name": "observation",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "",
      "description": "",
      "datatype": "TABLE_ALIAS",
      "allowsLists": false,
      "rName": "observation.data",
      "useInR": true,
      "rOrderNum": 3
    }
  ],
  "argument_clauses": [
    {
      "targetTable": [
        "edges"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "TargetKey",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the names of the edges table columns that comprise the key of the target vertices.",
      "description": " Specify the names of the edges table columns that comprise the key of the target vertices.",
      "datatype": "COLUMNS",
      "allowsLists": true,
      "rName": "target.key",
      "useInR": true,
      "rOrderNum": 4
    },
    {
      "targetTable": [
        "observation"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "requiredLength": 1,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "ObservationColumn",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the name of the observation table column that contains the observations.",
      "description": "[Required with observation table, optional otherwise.] Specify the name of the observation table column that contains the observations.",
      "datatype": "COLUMNS",
      "allowsLists": false,
      "rName": "observation.column",
      "useInR": true,
      "rOrderNum": 5
    },
    {
      "targetTable": [
        "edges"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "requiredLength": 1,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "EdgeWeight",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the name of the edges table column that contains the edge weights. The function uses only positive edge weights. The sum of the edge weights that the function uses must be 1.",
      "description": " Specify the name of the edges table column that contains the edge weights. The function uses only positive edge weights. The sum of the edge weights that the function uses must be 1. Default behavior: All edges have equal weight.",
      "datatype": "COLUMNS",
      "allowsLists": false,
      "rName": "edge.weight",
      "useInR": true,
      "rOrderNum": 6
    },
    {
      "targetTable": [
        "vertices"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "Accumulate",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the names of the vertices table columns to copy to the output table.",
      "description": " Specify the names of the vertices table columns to copy to the output table.",
      "datatype": "COLUMNS",
      "allowsLists": true,
      "rName": "accumulate",
      "useInR": true,
      "rOrderNum": 7
    },
    {
      "defaultValue": 20,
      "lowerBound": 0,
      "upperBound": 2147483647,
      "lowerBoundType": "EXCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "MaxIterNum",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the maximum number of iterations that the algorithm can run. The default value is 20. ",
      "description": " Specify the maximum number of iterations that the algorithm can run. Default: 20",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "max.iter.num",
      "useInR": true,
      "rOrderNum": 8
    },
    {
      "defaultValue": 0.0001,
      "lowerBound": 0,
      "upperBound": Infinity,
      "lowerBoundType": "EXCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "StopThreshold",
      "alternateNames": [
        "Threshold"
      ],
      "isRequired": false,
      "rDescription": "Specifies the threshold value for convergence. The default value is 0.0001. ",
      "description": " Specify the threshold value for convergence. Default: 0.0001",
      "datatype": "DOUBLE",
      "allowsLists": false,
      "rName": "threshold",
      "useInR": true,
      "rOrderNum": 9
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "SequenceInputBy",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the LIST_VECTOR of column(s) that uniquely identifies each row of the input argument INPUT_ARG_NAME. The argument is used to ensure deterministic results for functions which produce results that vary from run to run.",
      "description": "Specifies the input column(s) that uniquely identify each row of input table. The format is 'input1:c1' where input1 refers to the alias used by the input table that contains such column named c1.",
      "datatype": "STRING",
      "allowsLists": true,
      "rName": "sequence.column",
      "useInR": true,
      "rOrderNum": 50
    }
  ]
}