{
  "json_schema_major_version": "1",
  "json_schema_minor_version": "2",
  "json_content_version": "1",
  "function_name": "Minhash",
  "function_version": "2.9",
  "function_type": "driver",
  "function_alias_name": "MinHash",
  "function_r_name": "aa.minhash",
  "short_description": "This function clusters the users according to their Jaccard similarity measure.",
  "long_description": "The MinHash function uses transaction history to cluster similar items or users together. For example, the function can cluster items that are frequently bought together or users that bought the same items.",
  "input_tables": [
    {
      "requiredInputKind": [],
      "isOrdered": false,
      "partitionByOne": false,
      "name": "InputTable",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the name of the input table.",
      "description": "Specifies the name of the input table.",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "data",
      "useInR": true,
      "rOrderNum": 1
    },
    {
      "requiredInputKind": [],
      "isOrdered": false,
      "partitionByOne": false,
      "name": "SeedTable",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the name of the table that contains the seeds to use for hashing. Typically, this table was created by an earlier ta.minhash call that specified its name in the save.seed.to argument.",
      "description": " Specifies the name of the table that contains the seeds to use for hashing. Typically, this table was created by an earlier Minhash call that specified its name in the SaveSeedTo argument.",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "seed.table",
      "useInR": true,
      "rOrderNum": 6
    }
  ],
  "output_tables": [
    {
      "isOutputTable": true,
      "name": "OutputTable",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the name of the output table.",
      "description": "Specify the name of the output table.",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "output.table",
      "useInR": true,
      "rOrderNum": 100
    },
    {
      "isOutputTable": true,
      "name": "OutputSeedsTable",
      "alternateNames": [
        "SaveSeedTo"
      ],
      "isRequired": false,
      "rDescription": " Specifies the name of the table where seeds are to be saved.",
      "description": " Specifies the name of the table where seeds are to be saved.",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "save.seed.to",
      "useInR": true,
      "rOrderNum": 101
    }
  ],
  "argument_clauses": [
    {
      "targetTable": [
        "InputTable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "requiredLength": 1,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "UserIDColumn",
      "alternateNames": [
        "IDColumn"
      ],
      "isRequired": true,
      "rDescription": "Specifies the name of the input table column that contains the values to be hashed into the same cluster. Typically these values are customer identifiers.",
      "description": "Specify the name of the input table column that contains the IDs to cluster. Typically these values are customer identifiers.",
      "datatype": "COLUMN_NAMES",
      "allowsLists": false,
      "rName": "id.column",
      "useInR": true,
      "rOrderNum": 2
    },
    {
      "targetTable": [
        "InputTable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "requiredLength": 1,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "ItemIDColumn",
      "alternateNames": [
        "ItemsColumn"
      ],
      "isRequired": true,
      "rDescription": "Specifies the name of the input column that contains the values to use for hashing",
      "description": "Specify the name of the input column that contains the values to use for hashing.",
      "datatype": "COLUMN_NAMES",
      "allowsLists": false,
      "rName": "items.column",
      "useInR": true,
      "rOrderNum": 3
    },
    {
      "lowerBound": 0,
      "upperBound": 10000000.0,
      "lowerBoundType": "EXCLUSIVE",
      "upperBoundType": "EXCLUSIVE",
      "allowNaN": false,
      "name": "HashNum",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the number of hash functions to generate. The hash.num determines the number and size of clusters generated.",
      "description": "Specify the number of hash functions to create. The number_of_hash_functions determines the number and size of clusters created.",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "hash.num",
      "useInR": true,
      "rOrderNum": 4
    },
    {
      "lowerBound": 0,
      "upperBound": 2147483647,
      "lowerBoundType": "EXCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "KeyGroups",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": " Specifies the number of key groups to generate. The number_of_keygroups must be a divisor of number_of_hash_functions. A large number_of_keygroups decreases the probability that multiple users will be assigned to the same cluster identifier.",
      "description": "Specify the number of key groups to create. The number_of_key_groups must be a divisor of number_of_hash_functions . A large number_of_key_groups decreases the probability that multiple users are assigned to the same cluster identifier.",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "key.groups",
      "useInR": true,
      "rOrderNum": 5
    },
    {
      "permittedValues": [
        "bigint",
        "integer",
        "hex",
        "string"
      ],
      "defaultValue": "integer",
      "isOutputColumn": false,
      "name": "InputFormat",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": " Specifies the format of the values to be hashed (the values in items_column).",
      "description": " Specify the format of the values to hash (the values in item_id_column ). Default: 'integer'",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "input.format",
      "useInR": true,
      "rOrderNum": 7
    },
    {
      "defaultValue": 3,
      "lowerBound": 0,
      "upperBound": 2147483647,
      "lowerBoundType": "EXCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "MinClusterSize",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the minimum cluster size. The default value is 3.",
      "description": " Specify the minimum cluster size. Default: 3",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "mincluster.size",
      "useInR": true,
      "rOrderNum": 8
    },
    {
      "defaultValue": 5,
      "lowerBound": 0,
      "upperBound": 2147483647,
      "lowerBoundType": "EXCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "MaxClusterSize",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the maximum cluster size. The default value is 5.",
      "description": " Specify the maximum cluster size. Default: 5",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "maxcluster.size",
      "useInR": true,
      "rOrderNum": 9
    },
    {
      "permittedValues": [],
      "defaultValue": " ",
      "isOutputColumn": false,
      "name": "Delimiter",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the delimiter used between hashed values (typically customer identifiers) in the output. The default value is the space character.",
      "description": " Specify the delimiter used between hashed values (typically customer identifiers) in the output. Default: ' ' (space)",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "delimiter",
      "useInR": true,
      "rOrderNum": 10
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "UniqueId",
      "alternateNames": [
        "SequenceInputBy"
      ],
      "isRequired": false,
      "rDescription": "Specifies the LIST_VECTOR of column(s) that uniquely identifies each row of the input argument INPUT_ARG_NAME. The argument is used to ensure deterministic results for functions which produce results that vary from run to run.",
      "description": "Specifies the input column(s) that uniquely identify each row of input table. The format is 'input1:c1' where input1 refers to the alias used by the input table that contains such column named c1.",
      "datatype": "STRING",
      "allowsLists": true,
      "rName": "sequence.column",
      "useInR": true,
      "rOrderNum": 50
    }
  ]
}