{
  "json_schema_major_version": "1",
  "json_schema_minor_version": "2",
  "json_content_version": "1",
  "function_name": "NER",
  "function_version": "1.7",
  "function_type": "non-driver",
  "function_alias_name": "NERExtractor",
  "function_r_name": "aa.ner.predict",
  "short_description": "Named Entity Recognition SQL/MR function.",
  "long_description": "Named Entity Recognition SQL/MR function.",
  "input_tables": [
    {
      "requiredInputKind": [
        "PartitionByKey",
        "PartitionByAny"
      ],
      "isOrdered": false,
      "partitionByOne": false,
      "name": "input",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "The relation from which extract named entities",
      "description": "The relation from which extract named entities",
      "datatype": "TABLE_ALIAS",
      "allowsLists": false,
      "rName": "data",
      "useInR": true,
      "rOrderNum": 1
    },
    {
      "requiredInputKind": [
        "Dimension"
      ],
      "isOrdered": false,
      "partitionByOne": false,
      "name": "rules",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "The relation that contains the regex rules",
      "description": "The relation that contains the regex rules",
      "datatype": "TABLE_ALIAS",
      "allowsLists": false,
      "rName": "rules",
      "useInR": true,
      "rOrderNum": 2
    },
    {
      "requiredInputKind": [
        "Dimension"
      ],
      "isOrdered": false,
      "partitionByOne": false,
      "name": "dict",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "The relation that contains the dictionary for named entities",
      "description": "The relation that contains the dictionary for named entities",
      "datatype": "TABLE_ALIAS",
      "allowsLists": false,
      "rName": "dict",
      "useInR": true,
      "rOrderNum": 3
    }
  ],
  "argument_clauses": [
    {
      "targetTable": [
        "input"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "STRING"
      ],
      "requiredLength": 1,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "TextColumn",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the name of the input table column that contains the text to analyze.",
      "description": "Specify the name of the input table column that contains the text to analyze.",
      "datatype": "COLUMNS",
      "allowsLists": false,
      "rName": "text.column",
      "useInR": true,
      "rOrderNum": 4
    },
    {
      "targetTable": [
        "input"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "Accumulate",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the names of the input table columns to copy to the output table.",
      "description": " Specify the names of the input table columns to copy to the output table.",
      "datatype": "COLUMNS",
      "allowsLists": true,
      "rName": "accumulate",
      "useInR": true,
      "rOrderNum": 8
    },
    {
      "permittedValues": [
        "en",
        "zh_CN",
        "zh_TW"
      ],
      "defaultValue": "en",
      "isOutputColumn": false,
      "name": "InputLanguage",
      "alternateNames": [
        "Language"
      ],
      "isRequired": false,
      "rDescription": "Specifies the language of the input text: en (English, the default), zh_CN (Simplified Chinese), zh_TW (Traditional Chinese)",
      "description": " Specify the language of the input text: Option Description 'en' (Default) English 'zh_CN' Simplified Chinese 'zh_TW' Traditional Chinese",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "language",
      "useInR": true,
      "rOrderNum": 6
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "InputModelFiles",
      "alternateNames": [
        "Models",
        "ModelFiles"
      ],
      "isRequired": false,
      "rDescription": "Specifies the CRF models (binary files) to use, generated by \u201cta.nertrainer\u201d. If you specified the ExtractorJAR argument in the ta.nertrainer call that generated model_file, then you must specify the same jar_file in this argument. You must install model_file and jar_file in Aster Database under the user search path before calling the ta.ner function. Note: The names model_file and jar_file are case-sensitive.",
      "description": "Specifies the CRF models (binary files) to use, generated by \u201cNERTrainer\u201d. If you specified the ExtractorJAR argument in the NERTrainer call that generated model_file, then you must specify the same jar_file in this argument. You must install model_file and jar_file in Aster Database under the user search path before calling the NER function. Note: The names model_file and jar_file are case-sensitive.",
      "datatype": "STRING",
      "allowsLists": true,
      "rName": "models",
      "useInR": true,
      "rOrderNum": 5
    },
    {
      "defaultValue": 0,
      "lowerBound": 0,
      "upperBound": 10,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "EXCLUSIVE",
      "allowNaN": false,
      "name": "ShowContext",
      "alternateNames": [
        "ShowEntityContext"
      ],
      "isRequired": false,
      "rDescription": "Specifies the number of context words to output. If context_words is n (which must be a positive integer), the function outputs the n words that precede the entity, the entity, and the n words that follow the entity. The default value is 0.",
      "description": " Specify the number of context words to output (a positive integer). The function outputs the n words that precede the entity, the entity, and the n words that follow the entity. Default: 0",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "show.entity.context",
      "useInR": true,
      "rOrderNum": 7
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "UniqueId",
      "alternateNames": [
        "SequenceInputBy"
      ],
      "isRequired": false,
      "rDescription": "Specifies the LIST_VECTOR of column(s) that uniquely identifies each row of the input argument INPUT_ARG_NAME. The argument is used to ensure deterministic results for functions which produce results that vary from run to run.",
      "description": "Specifies the input column(s) that uniquely identify each row of input table. The format is 'input1:c1' where input1 refers to the alias used by the input table that contains such column named c1.",
      "datatype": "STRING",
      "allowsLists": true,
      "rName": "sequence.column",
      "useInR": true,
      "rOrderNum": 50
    }
  ]
}