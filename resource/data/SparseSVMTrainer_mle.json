{
  "json_schema_major_version": "1",
  "json_schema_minor_version": "2",
  "json_content_version": "1",
  "function_name": "SparseSVMTrainer",
  "function_version": "1.4",
  "function_type": "driver",
  "function_alias_name": "SVMSparse",
  "function_r_name": "aa.svm.sparse.train",
  "short_description": "This function trains a SVM model according to the training set iteratively. ",
  "long_description": "This function is used to train a SVM model for sparse input data.  The training is a iterative process controlled by the paramters.  We may choose project the attributes to a hash space or explictly record all  the attributes as a list during the training.",
  "input_tables": [
    {
      "requiredInputKind": [],
      "isOrdered": false,
      "partitionByOne": false,
      "name": "InputTable",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": " Specifies the name of the table or view that contains the training samples.",
      "description": " Specifies the name of the table or view that contains the training samples.",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "data",
      "useInR": true,
      "rOrderNum": 1
    }
  ],
  "output_tables": [
    {
      "isOutputTable": true,
      "name": "ModelTable",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the name for the model table that the function creates (which must not exist).",
      "description": "Specifies the name for the model table that the function creates (which must not exist).",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "model.table",
      "useInR": true,
      "rOrderNum": 100
    }
  ],
  "argument_clauses": [
    {
      "targetTable": [
        "InputTable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "DISTRIBUTIONTYPE"
      ],
      "requiredLength": 1,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "IDColumn",
      "alternateNames": [
        "SampleIdColumn"
      ],
      "isRequired": true,
      "rDescription": "Specifies the name of the input_table column that contains the identifiers of the training samples.",
      "description": "Specifies the name of the input_table column that contains the identifiers of the training samples.",
      "datatype": "COLUMN_NAMES",
      "allowsLists": false,
      "rName": "sample.id.column",
      "useInR": true,
      "rOrderNum": 2
    },
    {
      "targetTable": [
        "InputTable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "STRING",
        "INTEGER"
      ],
      "requiredLength": 1,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "AttributeNameColumn",
      "alternateNames": [
        "AttributeColumn"
      ],
      "isRequired": true,
      "rDescription": " Specifies the name of the input_table column that contains the attributes of the samples.",
      "description": " Specifies the name of the input_table column that contains the attributes of the samples.",
      "datatype": "COLUMN_NAMES",
      "allowsLists": false,
      "rName": "attribute.column",
      "useInR": true,
      "rOrderNum": 3
    },
    {
      "targetTable": [
        "InputTable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "STRING",
        "INTEGER"
      ],
      "requiredLength": 1,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "ResponseColumn",
      "alternateNames": [
        "LabelColumn"
      ],
      "isRequired": true,
      "rDescription": "Specifies the name of the input_table column that contains the classes of the samples.",
      "description": "Specifies the name of the input_table column that contains the classes of the samples.",
      "datatype": "COLUMN_NAMES",
      "allowsLists": false,
      "rName": "label.column",
      "useInR": true,
      "rOrderNum": 5
    },
    {
      "targetTable": [
        "InputTable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "NUMERIC"
      ],
      "requiredLength": 1,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "AttributeValueColumn",
      "alternateNames": [
        "ValueColumn"
      ],
      "isRequired": false,
      "rDescription": "Specifies the name of the input_table column that contains the attribute values. By default, each attribute has the value 1.",
      "description": "Specifies the name of the input_table column that contains the attribute values. By default, each attribute has the value 1.",
      "datatype": "COLUMN_NAMES",
      "allowsLists": false,
      "rName": "value.column",
      "useInR": true,
      "rOrderNum": 4
    },
    {
      "defaultValue": false,
      "name": "HashProjection",
      "alternateNames": [
        "Hash"
      ],
      "isRequired": false,
      "rDescription": " Specifies whether to use hash projection on attributes. hash projection can accelerate processing speed but can slightly decrease accuracy. The default value is 'false'. Note: You must use hash projection if the dataset has more features than fit into memory",
      "description": "Specifies whether to use hash projection on attributes. Hash projection can accelerate processing speed but can slightly decrease accuracy. The default value is 'false'. Note: You must use hash projection if the dataset has more features than fit into memory",
      "datatype": "BOOLEAN",
      "allowsLists": false,
      "rName": "hash",
      "useInR": true,
      "rOrderNum": 8
    },
    {
      "lowerBound": 0,
      "upperBound": 2147483647,
      "lowerBoundType": "EXCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "HashBuckets",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Valid only if hash is 'true'. Specifies the number of buckets for hash projection. In most cases, the function can determine the appropriate number of buckets from the scale of the input data set. However, if the dataset has a very large number of features, you might have to specify buckets_number to accelerate the function.",
      "description": "Valid only if Hash is 'true'. Specifies the number of buckets for hash projection. In most cases, the function can determine the appropriate number of buckets from the scale of the input data set. However, if the dataset has a very large number of features, you might have to specify buckets_number to accelerate the function.",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "hash.buckets",
      "useInR": true,
      "rOrderNum": 9
    },
    {
      "defaultValue": 1,
      "lowerBound": 0,
      "upperBound": Infinity,
      "lowerBoundType": "EXCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "Cost",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "The regularization parameter in the SVM soft-margin loss function: Must be greater than 0.0. The default value is 1.0.",
      "description": "The regularization parameter in the SVM soft-margin loss function: Must be greater than 0.0. The default value is 1.0.",
      "datatype": "DOUBLE",
      "allowsLists": false,
      "rName": "cost",
      "useInR": true,
      "rOrderNum": 6
    },
    {
      "defaultValue": 0,
      "lowerBound": 0,
      "upperBound": Infinity,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "Bias",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "A non-negative value. If the value is greater than zero, each sample x in the training set will be converted to (x, b); that is, it will add another dimension containing the bias value b. This argument addresses situations where not all samples center at 0. The default value is 0.0.",
      "description": "A non-negative value. If the value is greater than zero, each sample x in the training set will be converted to (x, b); that is, it will add another dimension containing the bias value b. This argument addresses situations where not all samples center at 0. The default value is 0.0.",
      "datatype": "DOUBLE",
      "allowsLists": false,
      "rName": "bias",
      "useInR": true,
      "rOrderNum": 7
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "ClassWeights",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the weights for different classes. The format is: \u201cclasslabel m:weight m, classlabel n:weight n\u201d. If weight for a class is given, the cost parameter for this class is weight * cost. A weight larger than 1 often increases the accuracy of the corresponding class; however, it may decrease global accuracy. Classes not assigned a weight in this argument is assigned a weight of 1.0.",
      "description": "Specifies the weights for different classes. The format is: \u201cclasslabel m:weight m, classlabel n:weight n\u201d. If weight for a class is given, the cost parameter for this class is weight * cost. A weight larger than 1 often increases the accuracy of the corresponding class; however, it may decrease global accuracy. Classes not assigned a weight in this argument is assigned a weight of 1.0.",
      "datatype": "STRING",
      "allowsLists": true,
      "rName": "class.weights",
      "useInR": true,
      "rOrderNum": 10
    },
    {
      "defaultValue": 100,
      "lowerBound": 0,
      "upperBound": 10000,
      "lowerBoundType": "EXCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "MaxStep",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "A positive integer value that specifies the maximum number of iterations of the training process. One step means that each sample is seen once by the trainer. The input value must be in the range (0, 10000]. The default value is 100.",
      "description": "A positive integer value that specifies the maximum number of iterations of the training process. One step means that each sample is seen once by the trainer. The input value must be in the range (0, 10000]. The default value is 100.",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "max.step",
      "useInR": true,
      "rOrderNum": 11
    },
    {
      "defaultValue": 0.01,
      "lowerBound": 0,
      "upperBound": Infinity,
      "lowerBoundType": "EXCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "Epsilon",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Termination criterion. When the difference between the values of the loss function in two sequential iterations is less than this number, the function stops. Must be greater than 0.0. The default value is 0.01.",
      "description": "Termination criterion. When the difference between the values of the loss function in two sequential iterations is less than this number, the function stops. Must be greater than 0.0. The default value is 0.01.",
      "datatype": "DOUBLE",
      "allowsLists": false,
      "rName": "epsilon",
      "useInR": true,
      "rOrderNum": 12
    },
    {
      "defaultValue": 0,
      "lowerBound": 0,
      "upperBound": 9223372036854775807,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "EXCLUSIVE",
      "allowNaN": false,
      "name": "Seed",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "A long integer value used to order the training set randomly and consistently. This value can be used to ensure that the same model will be generated if the function is run multiple times in a given database with the same arguments. The input value must be in the range [0, 9223372036854775807]. The default value is 0.",
      "description": "A long integer value used to order the training set randomly and consistently. This value can be used to ensure that the same model will be generated if the function is run multiple times in a given database with the same arguments. The input value must be in the range [0, 9223372036854775807]. The default value is 0.",
      "datatype": "LONG",
      "allowsLists": false,
      "rName": "seed",
      "useInR": true,
      "rOrderNum": 13
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "SequenceInputBy",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the LIST_VECTOR of column(s) that uniquely identifies each row of the input argument INPUT_ARG_NAME. The argument is used to ensure deterministic results for functions which produce results that vary from run to run.",
      "description": "Specifies the input column(s) that uniquely identify each row of input table. The format is 'input1:c1' where input1 refers to the alias used by the input table that contains such column named c1.",
      "datatype": "STRING",
      "allowsLists": true,
      "rName": "sequence.column",
      "useInR": true,
      "rOrderNum": 50
    }
  ]
}