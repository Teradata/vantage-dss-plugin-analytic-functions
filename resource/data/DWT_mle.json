{
  "json_schema_major_version": "1",
  "json_schema_minor_version": "2",
  "json_content_version": "1",
  "function_name": "DWT",
  "function_version": "1.7",
  "function_type": "driver",
  "function_alias_name": "DWT",
  "function_r_name": "aa.dwt",
  "short_description": "This function performs 1D forward wavelet transform.",
  "long_description": "This function is used for 1D DWT forward transformation. It can perform transformation on multiple sequences simultaneously.  For each sequence, this function generates corresponding coefficients in the outputtable  and the meta data in the metatable",
  "input_tables": [
    {
      "requiredInputKind": [],
      "isOrdered": false,
      "partitionByOne": false,
      "name": "InputTable",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the name of the table or view that contains the sequences to be transformed",
      "description": "Specifies the name of the table or view that contains the sequences to be transformed",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "data",
      "useInR": true,
      "rOrderNum": 1
    },
    {
      "requiredInputKind": [],
      "isOrdered": false,
      "partitionByOne": false,
      "name": "WaveletFilterTable",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the name of the table that contains the coefficients of the wave filters.",
      "description": "Specifies the name of the table that contains the coefficients of the wave filters.",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "wavelet.filter",
      "useInR": true,
      "rOrderNum": 5
    }
  ],
  "output_tables": [
    {
      "isOutputTable": true,
      "name": "OutputTable",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the name for the table that the function creates to store the coefficients generated by the wavelet transform. This table must not exist.",
      "description": "Specifies the name for the table that the function creates to store the coefficients generated by the wavelet transform. This table must not exist.",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "coefficient",
      "useInR": true,
      "rOrderNum": 100
    },
    {
      "isOutputTable": true,
      "name": "MetaTable",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the name for the table that the function creates to store the meta information for the wavelet transform. This table must not exist.",
      "description": "Specifies the name for the table that the function creates to store the meta information for the wavelet transform. This table must not exist.",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "meta.table",
      "useInR": true,
      "rOrderNum": 101
    }
  ],
  "argument_clauses": [
    {
      "targetTable": [
        "InputTable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "requiredLength": 1,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "SortColumn",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the name of the column that defines the order of samples in the sequences to be transformed. In a time series sequence, the column can consist of timestamp values. Note: If sort_column has duplicate elements in a sequence (that is, in a partition), then sequence order can vary, and the function can produce different transform results for the sequence.",
      "description": "Specifies the name of the column that defines the order of samples in the sequences to be transformed. In a time series sequence, the column can consist of timestamp values. Note: If sort_column has duplicate elements in a sequence (that is, in a partition), then sequence order can vary, and the function can produce different transform results for the sequence.",
      "datatype": "COLUMN_NAMES",
      "allowsLists": false,
      "rName": "sort.column",
      "useInR": true,
      "rOrderNum": 3
    },
    {
      "targetTable": [
        "InputTable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "TargetColumns",
      "alternateNames": [
        "InputColumns"
      ],
      "isRequired": true,
      "rDescription": "Specifies the names of the columns in the input table or view that contain the data to be transformed. These columns must contain numeric values between -1e308 and 1e308. The function treats NULL as 0.",
      "description": "Specifies the names of the columns in the input table or view that contain the data to be transformed. These columns must contain numeric values between -1e308 and 1e308. The function treats NULL as 0.",
      "datatype": "COLUMN_NAMES",
      "allowsLists": true,
      "rName": "input.columns",
      "useInR": true,
      "rOrderNum": 2
    },
    {
      "targetTable": [
        "InputTable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "DISTRIBUTIONTYPE"
      ],
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "PartitionColumns",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the names of the partition.columns, which identify the sequences. Rows with the same partition.columns values belong to the same sequence. If you specify multiple partition.columns, then the function treats the first one as the distribute key of the output and meta tables. By default, all rows belong to one sequence, and the function generates a distribute key column named dwt_idrandom_name in both the output table and the meta table. In both tables, every cell of dwt_idrandom_name has the value 1.",
      "description": "Specifies the names of the partition columns, which identify the sequences. Rows with the same partition column values belong to the same sequence. If you specify multiple partition columns, then the function treats the first one as the distribute key of the output and meta tables. By default, all rows belong to one sequence, and the function generates a distribute key column named dwt_idrandom_name in both the output table and the meta table. In both tables, every cell of dwt_idrandom_name has the value 1.",
      "datatype": "COLUMN_NAMES",
      "allowsLists": true,
      "rName": "partition.columns",
      "useInR": true,
      "rOrderNum": 8
    },
    {
      "lowerBound": 1,
      "upperBound": 1000,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "WaveletTransformLevel",
      "alternateNames": [
        "Level"
      ],
      "isRequired": true,
      "rDescription": "Specifies the wavelet transform level. The value WaveletTransformLevel must be an integer in the range [1, 1000].",
      "description": "Specifies the wavelet transform level. The value WaveletTransformLevel must be an integer in the range [1, 1000].",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "level",
      "useInR": true,
      "rOrderNum": 6
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "name": "Wavelet",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies a wavelet filter name",
      "description": "Specifies a wavelet filter name",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "wavelet",
      "useInR": true,
      "rOrderNum": 4
    },
    {
      "permittedValues": [
        "sym",
        "zpd",
        "ppd"
      ],
      "defaultValue": "sym",
      "isOutputColumn": false,
      "name": "ExtensionMode",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": " Specifies the method for handling border distortion, an extension_mode from Table 3 - 104. The default value is 'sym'.",
      "description": " Specifies the method for handling border distortion, an extension_mode from Table 3 - 104. The default value is 'sym'.",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "extension.mode",
      "useInR": true,
      "rOrderNum": 7
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "SequenceInputBy",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the LIST_VECTOR of column(s) that uniquely identifies each row of the input argument INPUT_ARG_NAME. The argument is used to ensure deterministic results for functions which produce results that vary from run to run.",
      "description": "Specifies the input column(s) that uniquely identify each row of input table. The format is 'input1:c1' where input1 refers to the alias used by the input table that contains such column named c1.",
      "datatype": "STRING",
      "allowsLists": true,
      "rName": "sequence.column",
      "useInR": true,
      "rOrderNum": 50
    }
  ]
}