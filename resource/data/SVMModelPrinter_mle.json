{
  "json_schema_major_version": "1",
  "json_schema_minor_version": "2",
  "json_content_version": "1",
  "function_name": "SVMModelPrinter",
  "function_version": "1.5",
  "function_type": "non-driver",
  "function_alias_name": "SVMSparseSummary",
  "function_r_name": "aa.svm.sparse.modelprinter",
  "ref_function_r_name": "aa.svm.sparse.train",
  "short_description": "This function converts the binary weight vector into sparse (attributeid,weight) pairs. ",
  "long_description": "This function read a SVM model from model table, then convert  the model to sparse format according with the attribute and class label. If hash projection is adopted in training the model, it will find the  attribute string from the original input table. ",
  "input_tables": [
    {
      "requiredInputKind": [
        "PartitionByKey"
      ],
      "isOrdered": false,
      "partitionByOne": true,
      "name": "input",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "It should be the training dataset, otherwise the result may be incomplete.",
      "description": "It should be the training dataset, otherwise the result may be incomplete.",
      "datatype": "TABLE_ALIAS",
      "allowsLists": false,
      "rName": "data",
      "useInR": true,
      "rOrderNum": 2
    },
    {
      "requiredInputKind": [
        "Dimension"
      ],
      "isOrdered": false,
      "partitionByOne": false,
      "name": "model",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "The model table generated by ta.sparsesvmtrainer.",
      "description": "The model table generated by SparseSVMTrainer.",
      "datatype": "TABLE_ALIAS",
      "allowsLists": false,
      "rName": "object",
      "useInR": true,
      "rOrderNum": 1
    }
  ],
  "argument_clauses": [
    {
      "targetTable": [
        "input"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "INTEGER",
        "STRING"
      ],
      "requiredLength": 1,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "AttributeNameColumn",
      "alternateNames": [
        "AttributeColumn"
      ],
      "isRequired": true,
      "rDescription": "Specifies the name of the input table column that contains the attribute names",
      "description": "Specifies the name of the input table column that contains the attribute names",
      "datatype": "COLUMNS",
      "allowsLists": false,
      "rName": "attribute.column",
      "useInR": true,
      "rOrderNum": 3
    },
    {
      "defaultValue": false,
      "name": "OutputSummary",
      "alternateNames": [
        "Summary"
      ],
      "isRequired": false,
      "rDescription": "  Specifies whether the output is a summary of the model. If 'false', the output is the weight of each attribute in the model. The default value is 'false'.",
      "description": "  Specifies whether the output is a summary of the model. If 'false', the output is the weight of each attribute in the model. The default value is 'false'.",
      "datatype": "BOOLEAN",
      "allowsLists": false,
      "rName": "summary",
      "useInR": true,
      "rOrderNum": 4
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "SequenceInputBy",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the LIST_VECTOR of column(s) that uniquely identifies each row of the input argument INPUT_ARG_NAME. The argument is used to ensure deterministic results for functions which produce results that vary from run to run.",
      "description": "Specifies the input column(s) that uniquely identify each row of input table. The format is 'input1:c1' where input1 refers to the alias used by the input table that contains such column named c1.",
      "datatype": "STRING",
      "allowsLists": true,
      "rName": "sequence.column",
      "useInR": true,
      "rOrderNum": 50
    }
  ]
}