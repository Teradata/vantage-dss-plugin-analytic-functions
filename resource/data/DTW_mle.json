{
  "json_schema_major_version": "1",
  "json_schema_minor_version": "2",
  "json_content_version": "1",
  "function_name": "DTW",
  "function_version": "1.5",
  "function_type": "non-driver",
  "function_alias_name": "DTW",
  "function_r_name": "aa.dtw",
  "short_description": "This function is used to perform a comparison between 2 time series.",
  "long_description": "The DTW function performs dynamic time warping (DTW), which measures the similarity (warp distance) between two time series that vary in time or speed. You can use DTW to analyze any data that can be represented linearly\u2014for example, video, audio, and graphics. For example: In two videos, DTW can detect similarities in walking patterns, even if in one video the person is walking slowly and in another, the same person is walking fast. In audio, DTW can detect similarities in speech speeds (useful in speech recognition applications). Given an input table, a template table, and a mapping table, DTW compares each time series in the input table to the corresponding time series in the template table. The correspondence is defined by the mapping table. For more information, see",
  "input_tables": [
    {
      "requiredInputKind": [
        "PartitionByKey"
      ],
      "isOrdered": true,
      "partitionByOne": false,
      "name": "inputTable",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "the table contains the time series information",
      "description": "the table contains the time series information",
      "datatype": "TABLE_ALIAS",
      "allowsLists": false,
      "rName": "data",
      "useInR": true,
      "rOrderNum": 1
    },
    {
      "requiredInputKind": [
        "Dimension"
      ],
      "isOrdered": true,
      "partitionByOne": false,
      "name": "templateTable",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "the table contains the template information",
      "description": "the table contains the template information",
      "datatype": "TABLE_ALIAS",
      "allowsLists": false,
      "rName": "template.data",
      "useInR": true,
      "rOrderNum": 2
    },
    {
      "requiredInputKind": [
        "PartitionByKey"
      ],
      "isOrdered": false,
      "partitionByOne": false,
      "name": "mappingTable",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "the table contains the mapping between the rows in the inputTable and the rows in the templateTable",
      "description": "the table contains the mapping between the rows in the inputTable and the rows in the templateTable",
      "datatype": "TABLE_ALIAS",
      "allowsLists": false,
      "rName": "mapping.data",
      "useInR": true,
      "rOrderNum": 3
    }
  ],
  "argument_clauses": [
    {
      "targetTable": [
        "inputTable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "TargetColumns",
      "alternateNames": [
        "InputColumns"
      ],
      "isRequired": true,
      "rDescription": "Specifies the names of the data columns that contain the values and timestamps of the time series. Note that the input.columns argument has the alternate name input.columns. Note: If these columns contain NaN or infinity values, then use a WHERE clause to remove them.",
      "description": "Alternate argument name: Input_Table_Value_Column_Names Specify the names of the input_table columns that contain the values and timestamps of the time series. If these columns contain NaN or infinity values, use a WHERE clause to remove them.",
      "datatype": "COLUMNS",
      "allowsLists": true,
      "rName": "input.columns",
      "useInR": true,
      "rOrderNum": 4
    },
    {
      "targetTable": [
        "templateTable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "TemplateColumns",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the names of the template_table columns that contain the values and timestamps of the time series. Note that the template.columns argument has the alternate name template.columns. Note: If these columns contain NaN or infinity values, then use a WHERE clause to remove them.",
      "description": "Alternate argument name: Template_Table_Value_Column_Names Specify the names of the template_table columns that contain the values and timestamps of the time series. If these columns contain NaN or infinity values, use a WHERE clause to remove them.",
      "datatype": "COLUMNS",
      "allowsLists": true,
      "rName": "template.columns",
      "useInR": true,
      "rOrderNum": 5
    },
    {
      "targetTable": [
        "inputTable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "requiredLength": 1,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "TimeseriesId",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the names of the columns by which the input_table is partitioned. These columns comprise the unique ID for a time series in input_table.",
      "description": "Specify the names of the columns by which the input_table is partitioned. These columns comprise the unique ID for a time series in input_table.",
      "datatype": "COLUMNS",
      "allowsLists": false,
      "rName": "timeseries.id",
      "useInR": true,
      "rOrderNum": 6
    },
    {
      "targetTable": [
        "templateTable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "requiredLength": 1,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "TemplateId",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the names of the columns by which the template_table is ordered. These columns comprise the unique ID for a time series in template_table.",
      "description": "Specify the names of the columns by which the template_table is ordered. These columns comprise the unique ID for a time series in template_table.",
      "datatype": "COLUMNS",
      "allowsLists": false,
      "rName": "template.id",
      "useInR": true,
      "rOrderNum": 7
    },
    {
      "defaultValue": 10,
      "lowerBound": 0,
      "upperBound": 2147483645,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "Radius",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": " Specifies the integer value that determines the projected warp path from a previous resolution. The default value is 10.",
      "description": " Specify the integer value that determines the projected warp path from a previous resolution. Default: 10",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "radius",
      "useInR": true,
      "rOrderNum": 8
    },
    {
      "permittedValues": [
        "EuclideanDistance",
        "BinaryDistance",
        "ManhattanDistance"
      ],
      "defaultValue": "EuclideanDistance",
      "isOutputColumn": false,
      "name": "DistanceMethod",
      "alternateNames": [
        "DistMethod"
      ],
      "isRequired": false,
      "rDescription": "Specifies the DistMethod for computing the warping distance. The supported values of distance_method, which are case-sensitive, are: 'EuclideanDistance' (default),'ManhattanDistance', 'BinaryDistance'.contract Note that the DistanceMethod argument has the alternate name DistMethod.",
      "description": " Alternate argument name: Metric Specify the metric for computing the warping distance (options are case-sensitive): distance_method Description 'EuclideanDistance' (Default) Euclidean distance 'ManhattanDistance' Manhattan distance 'BinaryDistance' Binary distance",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "dist.method",
      "useInR": true,
      "rOrderNum": 9
    },
    {
      "defaultValue": false,
      "name": "WarpPath",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Determines whether to output the warping path. The default value is 'false'.",
      "description": " Determines whether to output the warping path. Default: 'false'",
      "datatype": "BOOLEAN",
      "allowsLists": false,
      "rName": "warp.path",
      "useInR": true,
      "rOrderNum": 10
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "SequenceInputBy",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the LIST_VECTOR of column(s) that uniquely identifies each row of the input argument INPUT_ARG_NAME. The argument is used to ensure deterministic results for functions which produce results that vary from run to run.",
      "description": "Specifies the input column(s) that uniquely identify each row of input table. The format is 'input1:c1' where input1 refers to the alias used by the input table that contains such column named c1.",
      "datatype": "STRING",
      "allowsLists": true,
      "rName": "sequence.column",
      "useInR": true,
      "rOrderNum": 50
    }
  ]
}