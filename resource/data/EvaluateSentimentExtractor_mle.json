{
  "json_schema_major_version": "1",
  "json_schema_minor_version": "2",
  "json_content_version": "1",
  "function_name": "EvaluateSentimentExtractor",
  "function_version": "1.5",
  "function_type": "non-driver",
  "function_alias_name": "SentimentEvaluator",
  "function_r_name": "aa.sentiment.evaluate",
  "ref_function_r_name": "aa.sentiment.extract",
  "short_description": "Evaluate the sentiment extraction SQL/MR function.",
  "long_description": "Evaluate the sentiment extraction SQL/MR function, by comapring the RESULT_COLUMN and RESULT_COLUMN.The value of EXPECT_COLUMN and RESULT_COLUMN should be 'pos' represent positive,'neg' represent negative and 'neu' represent neutral",
  "input_tables": [
    {
      "requiredInputKind": [
        "PartitionByKey"
      ],
      "isOrdered": false,
      "partitionByOne": true,
      "name": "input",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "The input table should contain a text column which contains input text.",
      "description": "The input table should contain a text column which contains input text.",
      "datatype": "TABLE_ALIAS",
      "allowsLists": false,
      "rName": "object",
      "useInR": true,
      "rOrderNum": 1
    }
  ],
  "argument_clauses": [
    {
      "targetTable": [
        "input"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "requiredLength": 1,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "ObservationColumn",
      "alternateNames": [
        "ObsColumn"
      ],
      "isRequired": true,
      "rDescription": "Specifies the name of the input column with the observed sentiment (POS, NEG or NEU).",
      "description": "Specify the name of the input column with the observed sentiment, which is one of the following: Option Description 'POS' Positive 'NEG' Negative 'NEU' Neutral",
      "datatype": "COLUMNS",
      "allowsLists": false,
      "rName": "obs.column",
      "useInR": true,
      "rOrderNum": 2
    },
    {
      "targetTable": [
        "input"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "requiredLength": 1,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "SentimentColumn",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the name of the input column with the predicted sentiment (POS, NEG or NEU).",
      "description": "Specify the name of the input column with the predicted sentiment ( 'POS' , 'NEG' , or 'NEU' ).",
      "datatype": "COLUMNS",
      "allowsLists": false,
      "rName": "sentiment.column",
      "useInR": true,
      "rOrderNum": 3
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "UniqueId",
      "alternateNames": [
        "SequenceInputBy"
      ],
      "isRequired": false,
      "rDescription": "Specifies the LIST_VECTOR of column(s) that uniquely identifies each row of the input argument INPUT_ARG_NAME. The argument is used to ensure deterministic results for functions which produce results that vary from run to run.",
      "description": "Specifies the input column(s) that uniquely identify each row of input table. The format is 'input1:c1' where input1 refers to the alias used by the input table that contains such column named c1.",
      "datatype": "STRING",
      "allowsLists": true,
      "rName": "sequence.column",
      "useInR": true,
      "rOrderNum": 50
    }
  ]
}