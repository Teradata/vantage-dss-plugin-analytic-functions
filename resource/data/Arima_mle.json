{
  "json_schema_major_version": "1",
  "json_schema_minor_version": "2",
  "json_content_version": "1",
  "function_name": "Arima",
  "function_version": "1.5",
  "function_type": "driver",
  "function_alias_name": "ARIMA",
  "function_r_name": "aa.arima",
  "short_description": "Estimate the parameters for given ARIMA model.",
  "long_description": "Estimate the parameters for given ARIMA model.User should provide the orders, seasonal order and period for training the model. The function will estimate the parameters with either CSS or ML mehtod specified. ",
  "input_tables": [
    {
      "requiredInputKind": [],
      "isOrdered": false,
      "partitionByOne": false,
      "name": "InputTable",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the name of the table or view that contains the input parameters.",
      "description": "Specifies the name of the table or view that contains the input parameters.",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "data",
      "useInR": true,
      "rOrderNum": 1
    },
    {
      "requiredInputKind": [],
      "isOrdered": false,
      "partitionByOne": false,
      "name": "OrdersTable",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the name of the orders table that is generated by TimeSeriesOrders function. ",
      "description": "Specifies the name of the orders table that is generated by TimeSeriesOrders function. ",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "orders.table",
      "useInR": true,
      "rOrderNum": 2
    }
  ],
  "output_tables": [
    {
      "isOutputTable": true,
      "name": "ModelTable",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the name of the table where the function outputs the coefficients of the input parameters; that is, the model.",
      "description": "Specifies the name of the table where the function outputs the coefficients of the input parameters; that is, the model.",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "coefficient",
      "useInR": true,
      "rOrderNum": 100
    },
    {
      "isOutputTable": true,
      "name": "ResidualTable",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the name of the table where the function outputs the residuals of the input parameters. Note: Specify this argument if you will input the model to the ta.arimapredict function.",
      "description": " Specifies the name of the table where the function outputs the residuals of the input parameters. Note: Specify this argument if you will input the model to the ArimaPredictor function.",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "residual.table",
      "useInR": true,
      "rOrderNum": 101
    }
  ],
  "argument_clauses": [
    {
      "targetTable": [
        "InputTable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "TimeColumns",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the names of the input_table columns that specify the sequence (time points) of the input parameters. The sequence must have uniform intervals.",
      "description": "Specifies the names of the input_table columns that specify the sequence (time points) of the input parameters. The sequence must have uniform intervals.",
      "datatype": "COLUMN_NAMES",
      "allowsLists": true,
      "rName": "timestamp.columns",
      "useInR": true,
      "rOrderNum": 3
    },
    {
      "targetTable": [
        "InputTable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "NUMERIC"
      ],
      "requiredLength": 1,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "TargetColumn",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the name of the column that contains the time series data in input_table.",
      "description": "Specifies the name of the column that contains the time series data in input_table.",
      "datatype": "COLUMN_NAMES",
      "allowsLists": false,
      "rName": "value.column",
      "useInR": true,
      "rOrderNum": 4
    },
    {
      "targetTable": [
        "InputTable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "PartitionColumns",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the partition columns that will be passed to the output. If not specified, the output will not contain partition columns.",
      "description": "Specifies the partition columns that will be passed to the output. If not specified, the output will not contain partition columns.",
      "datatype": "COLUMN_NAMES",
      "allowsLists": true,
      "rName": "partition.columns",
      "useInR": true,
      "rOrderNum": 9
    },
    {
      "permittedValues": [],
      "rDefaultValue": "0,0,0",
      "isOutputColumn": false,
      "name": "Orders",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the values of the non-seasonal orders p, d, and q for the ARIMA model. The p and q must be an integer between 0 and 10, inclusive. The d must be between 0 and 1, inclusive.",
      "description": "Specifies the values of the non-seasonal orders p, d, and q for the ARIMA model. Each value must be an integer between 0 and 10, inclusive. The d must be between 0 and 1, inclusive.",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "order",
      "useInR": true,
      "rOrderNum": 5
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "name": "SeasonalOrders",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the values of the seasonal orders sp, sd, and sq for the ARIMA model. The sp and sq must be an integer between 0 and 10, inclusive. The sd must be between 0 and 3, inclusive",
      "description": "Specifies the values of the seasonal orders sp, sd, and sq for the ARIMA model. The sp and sq must be an integer between 0 and 10, inclusive. The sd must be between 0 and 3, inclusive",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "seasonal",
      "useInR": true,
      "rOrderNum": 6
    },
    {
      "lowerBound": 0,
      "upperBound": 1000000,
      "lowerBoundType": "EXCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "Period",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the period of a season (m in the formula). This value must be a positive integer value. If you specify seasonal, then you must also specify period.",
      "description": " Specifies the period of a season (m in the formula). This value must be a positive integer value. If you specify SeasonalOrders, then you must also specify Period",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "period",
      "useInR": true,
      "rOrderNum": 7
    },
    {
      "defaultValue": false,
      "rDefaultValue": false,
      "name": "IncludeMean",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies whether the function adds the mean value (c in the formula) to the ta.arima model. The default value is 'false'. Note: If include.mean is 'true', then both d in Orders and sd in seasonal must be 0.",
      "description": "Specifies whether the function adds the mean value (c in the formula) to the ARIMA model. The default value is 'false'. Note: If IncludeMean is 'true', then both d in Orders and sd in SeasonalOrders must be 0.",
      "datatype": "BOOLEAN",
      "allowsLists": false,
      "rName": "include.mean",
      "useInR": true,
      "rOrderNum": 8
    },
    {
      "defaultValue": 10000,
      "rDefaultValue": 10000,
      "lowerBound": 0,
      "upperBound": 2147483647,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "MaxIterNum",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the maximum iteration number for estimating the parameters. This value must be a positive integer. The default value is 10000.",
      "description": "Specifies the maximum iteration number for estimating the parameters. This value must be a positive integer. The default value is 10000.",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "max.iterations",
      "useInR": true,
      "rOrderNum": 9
    },
    {
      "permittedValues": [
        "SSE",
        "ML"
      ],
      "defaultValue": "SSE",
      "rDefaultValue": "SSE",
      "isOutputColumn": false,
      "name": "FitMethod",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the method for fitting the model parameters: SSE (Default): Sum of squared error. ML: Maximum likelihood",
      "description": "Specifies the method for fitting the model parameters: SSE (Default): Sum of squared error. ML: Maximum likelihood",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "method",
      "useInR": true,
      "rOrderNum": 11
    },
    {
      "defaultValue": false,
      "rDefaultValue": false,
      "name": "IncludeDrift",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specify whether drift term is included in the ARIMA model. Default value is False. Note that this argument can only be True when d is non-zero and less than 2. ",
      "description": "Specify whether drift term is included in the ARIMA model. Default value is false. Note that if this argument can only be True when d is non-zero and less than 2. ",
      "datatype": "BOOLEAN",
      "allowsLists": false,
      "rName": "include.drift",
      "useInR": true,
      "rOrderNum": 12
    },
    {
      "lowerBound": 0,
      "upperBound": 10,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "OrderP",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "The p value of the non-seasonal order parameter. The p value must be an integer between 0 and 10, inclusive. ",
      "description": "The p value of the non-seasonal order parameter. The p value must be an integer between 0 and 10, inclusive. ",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "order.p",
      "useInR": true,
      "rOrderNum": 13
    },
    {
      "lowerBound": 0,
      "upperBound": 1,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "OrderD",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "The d value of the non-seasonal order parameter. The d value must be an integer between 0 and 1, inclusive. ",
      "description": "The d value of the non-seasonal order parameter. The d value must be an integer between 0 and 1, inclusive. ",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "order.d",
      "useInR": true,
      "rOrderNum": 14
    },
    {
      "lowerBound": 0,
      "upperBound": 10,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "OrderQ",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "The q value of the non-seasonal order parameter. The q value must be an integer between 0 and 10, inclusive. ",
      "description": "The q value of the non-seasonal order parameter. The q value must be an integer between 0 and 10, inclusive. ",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "order.q",
      "useInR": true,
      "rOrderNum": 15
    },
    {
      "lowerBound": 0,
      "upperBound": 10,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "SeasonalOrderP",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "The sp value of the seasonal order parameter. The sp value must be an integer between 0 and 10, inclusive. ",
      "description": "The sp value of the seasonal order parameter. The sp value must be an integer between 0 and 10, inclusive. ",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "seasonal.order.p",
      "useInR": true,
      "rOrderNum": 16
    },
    {
      "lowerBound": 0,
      "upperBound": 3,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "SeasonalOrderD",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "The sd value of the seasonal order parameter. The sd value must be an integer between 0 and 3, inclusive. ",
      "description": "The sd value of the seasonal order parameter. The sd value must be an integer between 0 and 3, inclusive. ",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "seasonal.order.d",
      "useInR": true,
      "rOrderNum": 17
    },
    {
      "lowerBound": 0,
      "upperBound": 10,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "SeasonalOrderQ",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "The sq value of the seasonal order parameter. The sq value must be an integer between 0 and 10, inclusive. ",
      "description": "The sq value of the seasonal order parameter. The sq value must be an integer between 0 and 10, inclusive. ",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "seasonal.order.q",
      "useInR": true,
      "rOrderNum": 18
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "SequenceInputBy",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the LIST_VECTOR of column(s) that uniquely identifies each row of the input argument INPUT_ARG_NAME. The argument is used to ensure deterministic results for functions which produce results that vary from run to run.",
      "description": "Specifies the input column(s) that uniquely identify each row of input table. The format is 'input1:c1' where input1 refers to the alias used by the input table that contains such column named c1.",
      "datatype": "STRING",
      "allowsLists": true,
      "rName": "sequence.column",
      "useInR": true,
      "rOrderNum": 50
    }
  ]
}