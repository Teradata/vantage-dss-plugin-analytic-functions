{
  "json_schema_major_version": "1",
  "json_schema_minor_version": "2",
  "json_content_version": "1",
  "function_name": "CoxPH",
  "function_version": "1.7",
  "function_type": "driver",
  "function_alias_name": "CoxPH",
  "function_r_name": "aa.coxph",
  "short_description": "Cox Proportitional Hazard Model function",
  "long_description": "Cox Proportitional Hazard Model function. ",
  "input_tables": [
    {
      "requiredInputKind": [],
      "isOrdered": false,
      "partitionByOne": false,
      "name": "inputtable",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the name of the table that contains the input parameters.",
      "description": "Specifies the name of the table that contains the input parameters.",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "data",
      "useInR": true,
      "rOrderNum": 1
    }
  ],
  "output_tables": [
    {
      "isOutputTable": true,
      "name": "CoefficientTable",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the name of the table where the function outputs the estimated coefficients of the input parameters.",
      "description": "Specifies the name of the table where the function outputs the estimated coefficients of the input parameters.",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "coefficient.table",
      "useInR": true,
      "rOrderNum": 100
    },
    {
      "isOutputTable": true,
      "name": "LinearPredictorTable",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "The linear_predictor_table is a required argument clause.",
      "description": "The linear_predictor_table is a required argument clause.",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "linear.predictor.table",
      "useInR": true,
      "rOrderNum": 101
    }
  ],
  "argument_clauses": [
    {
      "targetTable": [
        "inputtable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "requiredLength": 1,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "TimeIntervalColumn",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the name of the column in input_table that contains the time intervals of the input parameters; that is, end_time - start_time, in any unit of time (for example, years, months, or days).",
      "description": "Specifies the name of the column in input_table that contains the time intervals of the input parameters; that is, end_time - start_time, in any unit of time (for example, years, months, or days).",
      "datatype": "COLUMN_NAMES",
      "allowsLists": false,
      "rName": "time.interval.column",
      "useInR": true,
      "rOrderNum": 3
    },
    {
      "targetTable": [
        "inputtable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "requiredLength": 1,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "EventColumn",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the name of the column in input_table that contains 1 if the event occurred by end_time and 0 if it did not. (0 represents survival or right-censorship.) The function ignores values other than 1 and 0.",
      "description": "Specifies the name of the column in input_table that contains 1 if the event occurred by end_time and 0 if it did not. (0 represents survival or right-censorship.) The function ignores values other than 1 and 0.",
      "datatype": "COLUMN_NAMES",
      "allowsLists": false,
      "rName": "event.column",
      "useInR": true,
      "rOrderNum": 4
    },
    {
      "targetTable": [
        "inputtable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "FeatureColumns",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the names of the input table columns that contain the features of the input parameters.",
      "description": "Specifies the names of the input table columns that contain the features of the input parameters.",
      "datatype": "COLUMN_NAMES",
      "allowsLists": true,
      "rName": "feature.columns",
      "useInR": true,
      "rOrderNum": 2
    },
    {
      "targetTable": [
        "inputtable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "INTEGER",
        "STRING"
      ],
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "CategoricalColumns",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the names of the input table columns that contain categorical predictors. Each categorical_column must also be a feature_column. By default, the function detects the categorical columns by their SQL data types.",
      "description": "Specifies the names of the input table columns that contain categorical predictors. Each categorical_column must also be a feature_column. By default, the function detects the categorical columns by their SQL data types.",
      "datatype": "COLUMN_NAMES",
      "allowsLists": true,
      "rName": "categorical.columns",
      "useInR": true,
      "rOrderNum": 7
    },
    {
      "targetTable": [
        "inputtable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "Accumulate",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the names of the columns in input_table that the function copies to linear_predictor_table.",
      "description": "Specifies the names of the columns in input_table that the function copies to linear_predictor_table.",
      "datatype": "COLUMN_NAMES",
      "allowsLists": true,
      "rName": "accumulate",
      "useInR": true,
      "rOrderNum": 8
    },
    {
      "defaultValue": 10,
      "lowerBound": 1,
      "upperBound": 2147483647,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "MaxIterNum",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the maximum number of iterations that the function runs before finishing, if the convergence threshold has not been met. The default value is 10.",
      "description": "Specifies the maximum number of iterations that the function runs before finishing, if the convergence threshold has not been met. The default value is 10.",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "max.iter.num",
      "useInR": true,
      "rOrderNum": 6
    },
    {
      "defaultValue": 1e-09,
      "lowerBound": 0.0,
      "upperBound": 1.0,
      "lowerBoundType": "EXCLUSIVE",
      "upperBoundType": "EXCLUSIVE",
      "allowNaN": false,
      "name": "StopThreshold",
      "alternateNames": [
        "Threshold"
      ],
      "isRequired": false,
      "rDescription": "Specifies the convergence threshold. The default value is 0.000000001.",
      "description": "Specifies the convergence threshold. The default value is 0.000000001.",
      "datatype": "DOUBLE",
      "allowsLists": false,
      "rName": "threshold",
      "useInR": true,
      "rOrderNum": 5
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "SequenceInputBy",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the LIST_VECTOR of column(s) that uniquely identifies each row of the input argument INPUT_ARG_NAME. The argument is used to ensure deterministic results for functions which produce results that vary from run to run.",
      "description": "Specifies the input column(s) that uniquely identify each row of input table. The format is 'input1:c1' where input1 refers to the alias used by the input table that contains such column named c1.",
      "datatype": "STRING",
      "allowsLists": true,
      "rName": "sequence.column",
      "useInR": true,
      "rOrderNum": 50
    }
  ]
}